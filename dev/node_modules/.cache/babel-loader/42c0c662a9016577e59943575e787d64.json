{"ast":null,"code":"import _slicedToArray from\"/Users/ccrm/Desktop/projects/chartjs/dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Line}from\"react-chartjs-2\";import burndownData from\"./burndownData\";import{Button}from\"@material-ui/core\";var AutomationRealTimeChart=function AutomationRealTimeChart(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),automationData=_useState2[0],setAutomationData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),dayCounter=_useState4[0],setDayCounter=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),initialState=_useState6[0],setInitialState=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),chartData=_useState8[0],setChartData=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),startAnimation=_useState10[0],setStartAnimation=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),reset=_useState12[0],setReset=_useState12[1];var chartOptions={labels:automationData.map(function(item){return item.Day;}),datasets:[{data:automationData.map(function(item){return item[\"Current state\"];}),label:\"Current State\",fill:false,lineTension:0.1,backgroundColor:\"rgba(75,192,192,0.4)\",borderColor:\"rgba(75,192,192,1)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgba(75,192,192,1)\",pointBackgroundColor:\"#fff\",pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:\"rgba(75,192,192,1)\",pointHoverBorderColor:\"rgba(220,220,220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10},{data:automationData.map(function(item){return item[\"Improved State\"];}),label:\"Improved State\",fill:false,lineTension:0.1,backgroundColor:\"rgba(255, 0, 0, 0.6)\",borderColor:\"rgba(255, 0, 0, 1)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgba(255, 0, 0, 1)\",pointBackgroundColor:\"#fff\",pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:\"rgba(255, 0, 0, 1)\",pointHoverBorderColor:\"rgba(220,220,220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10},{data:automationData.map(function(item){return item[\"Optimal State\"];}),label:\"Optimal State\",fill:false,lineTension:0.1,backgroundColor:\"rgb(241, 226, 95, 0.4)\",borderColor:\"rgb(241, 226, 95, 1)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(241, 226, 95, 1)\",pointBackgroundColor:\"#fff\",pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(241, 226, 95, 1)\",pointHoverBorderColor:\"rgba(220,220,220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10}]};if(startAnimation){}useEffect(function(){if(startAnimation){setChartData(chartOptions);if(dayCounter<50){setTimeout(function(){setDayCounter(dayCounter+1);setAutomationData(function(){return burndownData.slice(0,dayCounter);});},250);}if(dayCounter===50){setStartAnimation(false);setDayCounter(0);setAutomationData([]);}}},[dayCounter,startAnimation]);return/*#__PURE__*/React.createElement(\"div\",{style:{width:\"70%\",margin:\"40px auto\"},id:\"chart\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Optimising offboarding execution\"),/*#__PURE__*/React.createElement(Line,{data:chartData,options:{scales:{xAxes:[{ticks:{stepSize:1}}],yAxes:[{ticks:{suggestedMax:1000,suggestedMin:0}}]},animation:{duration:1000}}}),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:\"40px\"}},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setStartAnimation(!startAnimation);},variant:\"contained\",color:\"secondary\"},startAnimation?\"Stop\":\"Start\")));};export default AutomationRealTimeChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/automation/AutomationRealTime.jsx"],"names":["React","useEffect","useState","Line","burndownData","Button","AutomationRealTimeChart","automationData","setAutomationData","dayCounter","setDayCounter","initialState","setInitialState","chartData","setChartData","startAnimation","setStartAnimation","reset","setReset","chartOptions","labels","map","item","Day","datasets","data","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","setTimeout","slice","width","margin","scales","xAxes","ticks","stepSize","yAxes","suggestedMax","suggestedMin","animation","duration","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport burndownData from \"./burndownData\";\nimport { Button } from \"@material-ui/core\";\n\nconst AutomationRealTimeChart = () => {\n\n  const [automationData, setAutomationData] = useState([]);\n  const [dayCounter, setDayCounter] = useState(0);\n  const [initialState, setInitialState] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [startAnimation, setStartAnimation] = useState(false);\n  const [reset, setReset] = useState(false)\n  const chartOptions =\n  {\n    labels: automationData.map((item) => item.Day),\n    datasets: [\n      {\n        data: automationData.map((item) => item[\"Current state\"]),\n        label: \"Current State\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n\n      },\n      {\n        data: automationData.map((item) => item[\"Improved State\"]),\n        label: \"Improved State\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(255, 0, 0, 0.6)\",\n        borderColor: \"rgba(255, 0, 0, 1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(255, 0, 0, 1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(255, 0, 0, 1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n\n      },\n      {\n        data: automationData.map((item) => item[\"Optimal State\"]),\n        label: \"Optimal State\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgb(241, 226, 95, 0.4)\",\n        borderColor: \"rgb(241, 226, 95, 1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgb(241, 226, 95, 1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(241, 226, 95, 1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n\n      },\n    ],\n  }\n  if (startAnimation) {\n\n  }\n  useEffect(() => {\n    if (startAnimation) {\n      setChartData(chartOptions)\n\n      if (dayCounter < 50) {\n        setTimeout(() => {\n          setDayCounter(dayCounter + 1);\n          setAutomationData(() => burndownData.slice(0, dayCounter))\n\n        }, 250)\n      }\n      if (dayCounter === 50) {\n        setStartAnimation(false)\n        setDayCounter(0)\n        setAutomationData([])\n      }\n\n    }\n\n  }, [dayCounter, startAnimation])\n\n\n  return (\n    <div style={{ width: \"70%\", margin: \"40px auto\" }} id=\"chart\">\n      <h1>Optimising offboarding execution</h1>\n      <Line\n        data={chartData}\n        options={{\n          scales: {\n            xAxes: [{\n              ticks: {\n                stepSize: 1\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                suggestedMax: 1000,\n                suggestedMin: 0\n              }\n            }]\n          },\n          animation: {\n            duration: 1000\n          }\n        }}\n\n      />\n      <div style={{ marginTop: \"40px\" }}>\n        <Button onClick={() => setStartAnimation(!startAnimation)} variant=\"contained\" color=\"secondary\">{startAnimation ? \"Stop\" : \"Start\"}</Button>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default AutomationRealTimeChart;"]},"metadata":{},"sourceType":"module"}