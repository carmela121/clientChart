{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx\";\nimport React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport dataProcess from './data';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst HeatMap = props => {\n  const [chartOptions, setOptions] = React.useState({});\n  const [chartSeries, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [activeQuery, setActiveQuery] = React.useState(\"Hubs\");\n  const [customerData, setCustomerData] = React.useState([]);\n  const [dataByRegion, setDataByRegion] = React.useState([]);\n  const systems = dataProcess.map(item => item['Closure Systems'].map(system => system['System Name']));\n\n  if (!loading) {\n    const dataOptions = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        heatmap: {\n          radius: 4,\n          colorScale: {\n            ranges: [{\n              from: 0,\n              to: 2000,\n              color: \"#4bb0ff\",\n              name: \"0 - 2000\"\n            }, {\n              from: 2001,\n              to: 4000,\n              color: \"#0063b0\",\n              name: \"2001 - 4000\"\n            }, {\n              from: 4001,\n              to: 6000,\n              color: \"#003863\",\n              name: \"4001 - 6000\"\n            }]\n          }\n        }\n      },\n      xaxis: {\n        categories: dataByRegion.map(({\n          [\"Location code\"]: location\n        }) => location)\n      },\n      dataLabels: {\n        enabled: true // style: {\n        //   colors: [\"#787878\"],\n        //   fontWeight: \"lighter\"\n        // },\n\n      },\n      title: {\n        text: 'Method',\n        margin: 10,\n        offsetX: 40,\n        offsetY: 10,\n        floating: true,\n        style: {\n          fontSize: '16px'\n        }\n      },\n      colors: [\"#008FFB\"]\n    };\n    const dataSeries = [{\n      name: \"Manual Closures\",\n      data: dataByRegion.map(item => item[\"Manual Closures\"])\n    }, {\n      name: \"RPA Closures\",\n      data: dataByRegion.map(item => item[\"RPA Closures\"])\n    }, {\n      name: \"Closures with script available\",\n      data: dataByRegion.map(item => item[\"Closures with script available\"])\n    }];\n  }\n\n  const search = () => {\n    const regions = dataProcess.filter(item => item.Region === activeQuery);\n    setDataByRegion(regions);\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    setLoading(false);\n    search();\n    setOptions(dataOptions);\n    getSeries(dataSeries);\n  }, []);\n  console.log(dataByRegion.map(({\n    [\"Location code\"]: location\n  }) => location));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, \"Chart loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Offboarding Activities\"), /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: chartOptions,\n    series: chartSeries,\n    type: \"heatmap\",\n    height: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Country Code\")));\n};\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx"],"names":["React","ReactApexChart","dataProcess","Select","MenuItem","HeatMap","props","chartOptions","setOptions","useState","chartSeries","getSeries","loading","setLoading","activeQuery","setActiveQuery","customerData","setCustomerData","dataByRegion","setDataByRegion","systems","map","item","system","dataOptions","chart","toolbar","show","plotOptions","heatmap","radius","colorScale","ranges","from","to","color","name","xaxis","categories","location","dataLabels","enabled","title","text","margin","offsetX","offsetY","floating","style","fontSize","colors","dataSeries","data","search","regions","filter","Region","useEffect","console","log","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport dataProcess from './data';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst HeatMap = (props) => {\n\n  const [chartOptions, setOptions] = React.useState({});\n  const [chartSeries, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [activeQuery, setActiveQuery] = React.useState(\"Hubs\")\n  const [customerData, setCustomerData] = React.useState([])\n  const [dataByRegion, setDataByRegion] = React.useState([])\n  const systems = dataProcess.map((item) => item['Closure Systems'].map((system) => system['System Name']));\n  if (!loading) {\n    const dataOptions = {\n      chart: {\n        toolbar: {\n          show: false,\n        }\n      },\n\n      plotOptions: {\n        heatmap: {\n          radius: 4,\n          colorScale: {\n            ranges: [{\n              from: 0,\n              to: 2000,\n              color: \"#4bb0ff\",\n              name: \"0 - 2000\"\n            },\n            {\n              from: 2001,\n              to: 4000,\n              color: \"#0063b0\",\n              name: \"2001 - 4000\"\n            },\n            {\n              from: 4001,\n              to: 6000,\n              color: \"#003863\",\n              name: \"4001 - 6000\"\n            }\n            ]\n          }\n\n        }\n      },\n      xaxis: {\n        categories: dataByRegion.map(({ [\"Location code\"]: location }) => location)\n      },\n      dataLabels: {\n        enabled: true,\n        // style: {\n        //   colors: [\"#787878\"],\n        //   fontWeight: \"lighter\"\n        // },\n      },\n      title: {\n        text: 'Method',\n        margin: 10,\n        offsetX: 40,\n        offsetY: 10,\n        floating: true,\n        style: {\n          fontSize: '16px',\n\n        },\n\n      },\n\n      colors: [\"#008FFB\"],\n    };\n    const dataSeries = [{\n      name: \"Manual Closures\",\n      data: dataByRegion.map((item) => item[\"Manual Closures\"])\n    },\n    {\n      name: \"RPA Closures\",\n      data: dataByRegion.map((item) => item[\"RPA Closures\"])\n    },\n    {\n      name: \"Closures with script available\",\n      data: dataByRegion.map((item) => item[\"Closures with script available\"])\n    }]\n  }\n\n  const search = () => {\n\n    const regions = dataProcess.filter((item) => item.Region === activeQuery)\n    setDataByRegion(regions)\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n    setLoading(false);\n    search()\n    setOptions(dataOptions);\n    getSeries(dataSeries)\n\n\n  }, []);\n\n\n  console.log(dataByRegion.map(({ [\"Location code\"]: location }) => location))\n  return (\n\n    <div style={{ padding: \"40px\" }} >\n      {loading && <p>Chart loading...</p>}\n      <div className=\"mixed-chart\" style={{ margin: \"auto\" }}>\n        <h1>Offboarding Activities</h1>\n        <ReactApexChart\n          options={chartOptions}\n          series={chartSeries}\n          type=\"heatmap\"\n          height=\"300px\"\n\n        />\n        <p>Country Code</p>\n      </div>\n    </div >\n\n  );\n}\n\n\nexport default HeatMap;"]},"metadata":{},"sourceType":"module"}