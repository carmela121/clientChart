{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/client/src/components/charts/BarChart.js\";\nimport React from 'react';\nimport { Switch, FormGroup, FormControlLabel } from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      chartData: {\n        labels: [] // datasets: [{\n        //   label: 'Total population',\n        //   data: this.state.dataSet.map(({ total }) => total),\n        //   backgroundColor: [\n        //     'rgb(50, 168, 82)',\n        //     'rgb(168, 50, 50)',\n        //     'rgb(50, 144, 168)',\n        //     'rgb(142, 50, 168)',\n        //     'rgb(193, 201, 34)',\n        //     'rgb(64, 237, 231)',\n        //     'rgb(237, 64, 64)',\n        //     'rgb(32, 103, 135)']\n        // },\n        // {\n        //   label: 'Men',\n        //   data: this.state.dataSet.map(({ men }) => men),\n        //   backgroundColor: [\n        //     'rgb(65, 204, 103)',\n        //     'rgb(222, 73, 73)',\n        //     'rgb(78, 193, 222)',\n        //     'rgb(190, 70, 224)',\n        //     'rgb(219, 227, 68)',\n        //     'rgb(111, 227, 223)',\n        //     'rgb(237, 114, 114)',\n        //     'rgb(60, 158, 201)']\n        // },\n        // {\n        //   label: 'Women',\n        //   data: this.state.dataSet.map(({ women }) => women),\n        //   backgroundColor: [\n        //     'rgba(111, 227, 143)',\n        //     'rgba(240, 115, 115)',\n        //     'rgba(140, 218, 237)',\n        //     'rgba(211, 127, 235)',\n        //     'rgba(234, 240, 120)',\n        //     'rgba(182, 227, 225)',\n        //     'rgba(237, 164, 164)',\n        //     'rgb(106, 196, 235)']\n        // }\n        // ]\n\n      }\n    };\n  } // componentDidMount() {\n  //   fetch('http://localhost:5000')\n  //     .then(response => response.json())\n  //     .then(data => this.setState({ dataSet: data, isLoading: false }))\n  //     .catch(err => console.log('There was an error:' + err))\n  // }\n\n\n  async componentDidMount() {\n    const response = await fetch('http://localhost:5000');\n    const json = await response.json();\n    let labels = json.map(({\n      city\n    }) => city);\n    let total = json.map(({\n      total\n    }) => total);\n    let men = json.map(({\n      men\n    }) => men);\n    let women = json.map(({\n      women\n    }) => women);\n    let chartData = { ...this.state.chartData\n    };\n    chartData.labels = labels;\n    this.setState({\n      labels,\n      isLoading: false\n    });\n    console.log(this.state.labels);\n  }\n\n  render() {\n    if (this.state.isLoading) return 'Loading...';\n    console.log(this.state.chartData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      name: \"checkedA\",\n      onClick: this.props.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), this.state.dataSet && /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: true,\n          text: \"Andalucía population by region\",\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/client/src/components/charts/BarChart.js"],"names":["React","Switch","FormGroup","FormControlLabel","Bar","Chart","Component","constructor","props","state","isLoading","chartData","labels","componentDidMount","response","fetch","json","map","city","total","men","women","setState","console","log","render","handleClick","dataSet","title","display","text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,gBAA5B,QAAoD,mBAApD;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,EADC,CAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzCS;AAFA,KAAb;AA+CD,GAlDiC,CAoDlC;AAEA;AACA;AACA;AACA;AAIA;;;AAEA,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,QAAIJ,MAAM,GAAGI,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IAAvB,CAAb;AACA,QAAIC,KAAK,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAeA,KAAxB,CAAZ;AACA,QAAIC,GAAG,GAAGJ,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAaA,GAAtB,CAAV;AACA,QAAIC,KAAK,GAAGL,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEI,MAAAA;AAAF,KAAD,KAAeA,KAAxB,CAAZ;AACA,QAAIV,SAAS,GAAG,EAAE,GAAG,KAAKF,KAAL,CAAWE;AAAhB,KAAhB;AACAA,IAAAA,SAAS,CAACC,MAAV,GAAmBA,MAAnB;AAEA,SAAKU,QAAL,CAAc;AAAEV,MAAAA,MAAF;AAAUF,MAAAA,SAAS,EAAE;AAArB,KAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,MAAvB;AACD;;AACDa,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKhB,KAAL,CAAWC,SAAf,EAA0B,OAAO,YAAP;AAE1Ba,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,SAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWkB,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIG,KAAKjB,KAAL,CAAWkB,OAAX,iBAAsB,oBAAC,GAAD;AACrB,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWE,SADI;AAGrB,MAAA,OAAO,EAAE;AACPiB,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAE,gCAFD;AAGLC,UAAAA,QAAQ,EAAE;AAHL,SADA;AAMPC,QAAAA,MAAM,EAAE;AACNH,UAAAA,OAAO,EAAE,IADH;AAENI,UAAAA,QAAQ,EAAE;AAFJ;AAND,OAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJzB,CADF;AAuBD;;AAxGiC;;AA4GpC,eAAe5B,KAAf","sourcesContent":["import React from 'react'\nimport { Switch, FormGroup, FormControlLabel } from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      chartData: {\n        labels: [],\n        // datasets: [{\n        //   label: 'Total population',\n        //   data: this.state.dataSet.map(({ total }) => total),\n        //   backgroundColor: [\n        //     'rgb(50, 168, 82)',\n        //     'rgb(168, 50, 50)',\n        //     'rgb(50, 144, 168)',\n        //     'rgb(142, 50, 168)',\n        //     'rgb(193, 201, 34)',\n        //     'rgb(64, 237, 231)',\n        //     'rgb(237, 64, 64)',\n        //     'rgb(32, 103, 135)']\n        // },\n        // {\n        //   label: 'Men',\n        //   data: this.state.dataSet.map(({ men }) => men),\n        //   backgroundColor: [\n        //     'rgb(65, 204, 103)',\n        //     'rgb(222, 73, 73)',\n        //     'rgb(78, 193, 222)',\n        //     'rgb(190, 70, 224)',\n        //     'rgb(219, 227, 68)',\n        //     'rgb(111, 227, 223)',\n        //     'rgb(237, 114, 114)',\n        //     'rgb(60, 158, 201)']\n        // },\n        // {\n        //   label: 'Women',\n        //   data: this.state.dataSet.map(({ women }) => women),\n        //   backgroundColor: [\n        //     'rgba(111, 227, 143)',\n        //     'rgba(240, 115, 115)',\n        //     'rgba(140, 218, 237)',\n        //     'rgba(211, 127, 235)',\n        //     'rgba(234, 240, 120)',\n        //     'rgba(182, 227, 225)',\n        //     'rgba(237, 164, 164)',\n        //     'rgb(106, 196, 235)']\n        // }\n        // ]\n\n      }\n    }\n  }\n\n  // componentDidMount() {\n\n  //   fetch('http://localhost:5000')\n  //     .then(response => response.json())\n  //     .then(data => this.setState({ dataSet: data, isLoading: false }))\n  //     .catch(err => console.log('There was an error:' + err))\n\n\n\n  // }\n\n  async componentDidMount() {\n    const response = await fetch('http://localhost:5000');\n    const json = await response.json();\n\n    let labels = json.map(({ city }) => city)\n    let total = json.map(({ total }) => total)\n    let men = json.map(({ men }) => men)\n    let women = json.map(({ women }) => women)\n    let chartData = { ...this.state.chartData }\n    chartData.labels = labels\n\n    this.setState({ labels, isLoading: false });\n    console.log(this.state.labels)\n  }\n  render() {\n    if (this.state.isLoading) return 'Loading...';\n\n    console.log(this.state.chartData)\n    return (\n      <div className=\"chart\">\n\n        <Switch name=\"checkedA\" onClick={this.props.handleClick} />\n\n        {this.state.dataSet && <Bar\n          data={this.state.chartData}\n\n          options={{\n            title: {\n              display: true,\n              text: \"Andalucía population by region\",\n              fontSize: 25\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }}\n        />}\n      </div>\n\n    )\n  }\n\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}