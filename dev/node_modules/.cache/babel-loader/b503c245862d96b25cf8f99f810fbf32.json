{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/ClientDataChart.js\";\nimport React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClientDataChart = props => {\n  const [Xlabel, setXLabel] = React.useState('Number of BRs');\n\n  const getData = () => {\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel('Number of BRs');\n      const {\n        onboardedBRs,\n        offboardedBRs\n      } = props.data;\n      console.log(onboardedBRs);\n      const dataStructure = {\n        \"Onboarded BRs\": onboardedBRs,\n        \"Offboarded BRs\": offboardedBRs\n      };\n      const br = [209580, 208784, 126741, 105810, 42651];\n      const chartDataConfig = {\n        labels: [\"Onboarded BRs\", \"Offboarded BRs\"],\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\"\n        }]\n      };\n      return chartDataConfig;\n    }\n\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Files\");\n      const {\n        onboardedFiles,\n        offboardedFiles\n      } = props.data;\n      const dataStructure = {\n        \"Onboarded Files\": onboardedFiles,\n        \"Offboarded Files\": offboardedFiles\n      };\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\"\n        }]\n      };\n      return chartDataConfig;\n    }\n\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel(\"Number of BRs\");\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [{\n          label: \"Onboarded BRs\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n          data: [props.dataComparison[2].onboardedBRs, props.dataComparison[3].onboardedBRs]\n        }, {\n          label: \"Offboarded BRs\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n          data: [props.dataComparison[2].offboardedBRs, props.dataComparison[3].offboardedBRs]\n        }]\n      };\n      return chartDataConfigComparison;\n    }\n\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Files\");\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [{\n          label: \"Onboarded Files\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n          data: [props.dataComparison[2].onboardedFiles, props.dataComparison[3].onboardedFiles]\n        }, {\n          label: \"Offboarded Files\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n          data: [props.dataComparison[2].offboardedFiles, props.dataComparison[3].offboardedFiles]\n        }]\n      };\n      return chartDataConfigComparison;\n    }\n  };\n\n  const handleChange = e => {\n    props.setQuery(e.target.value);\n  };\n\n  const handleTypeChange = e => {\n    props.setTypeQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      textAlign: \"center\",\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Client Adoption and Offboarding\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\",\n      marginRight: \"20px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.typeQuery,\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"BRData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"BR Data\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"FileData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"File Data\")), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.activeQuery,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, props.dataComparison.map(({\n    year\n  }) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: year,\n    value: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, year)), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2018/2019\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"2018/2019\"))), /*#__PURE__*/React.createElement(HorizontalBar, {\n    options: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            beginAtZero: true\n          },\n          scaleLabel: {\n            display: true,\n            fontSize: 16,\n            labelString: Xlabel\n          }\n        }]\n      }\n    },\n    data: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClientDataChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/ClientDataChart.js"],"names":["React","HorizontalBar","Select","MenuItem","ClientDataChart","props","Xlabel","setXLabel","useState","getData","activeQuery","typeQuery","onboardedBRs","offboardedBRs","data","console","log","dataStructure","br","chartDataConfig","labels","datasets","Object","values","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","onboardedFiles","offboardedFiles","keys","chartDataConfigComparison","dataComparison","year","handleChange","e","setQuery","target","value","handleTypeChange","setTypeQuery","width","textAlign","padding","marginBottom","marginRight","map","scales","xAxes","ticks","beginAtZero","scaleLabel","display","fontSize","labelString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClientDataChart = (props) => {\n  const [Xlabel, setXLabel] = React.useState('Number of BRs')\n  const getData = () => {\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel('Number of BRs')\n      const { onboardedBRs, offboardedBRs } = props.data;\n      console.log(onboardedBRs)\n      const dataStructure = {\n        \"Onboarded BRs\": onboardedBRs,\n        \"Offboarded BRs\": offboardedBRs,\n\n      };\n      const br = [209580, 208784, 126741, 105810, 42651]\n      const chartDataConfig = {\n        labels: [\"Onboarded BRs\", \"Offboarded BRs\"],\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n        }]\n      };\n      return chartDataConfig\n    }\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Files\")\n\n      const { onboardedFiles, offboardedFiles } = props.data;\n\n      const dataStructure = {\n\n        \"Onboarded Files\": onboardedFiles,\n        \"Offboarded Files\": offboardedFiles,\n      };\n\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n        }]\n\n      };\n      return chartDataConfig\n    }\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel(\"Number of BRs\")\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [\n          {\n            label: \"Onboarded BRs\",\n            backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n            borderColor: \"rgba(120, 139, 191,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n            hoverBorderColor: \"rgba(120, 139, 191,1)\",\n            data: [props.dataComparison[2].onboardedBRs, props.dataComparison[3].onboardedBRs]\n          },\n          {\n            label: \"Offboarded BRs\",\n            backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n            borderColor: \"rgba(255, 204, 255,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n            hoverBorderColor: \"rgba(255, 204, 255,1)\",\n            data: [props.dataComparison[2].offboardedBRs, props.dataComparison[3].offboardedBRs]\n          },\n\n        ],\n\n      };\n      return chartDataConfigComparison\n    }\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Files\")\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [\n          {\n            label: \"Onboarded Files\",\n            backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n            borderColor: \"rgba(120, 139, 191,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n            hoverBorderColor: \"rgba(120, 139, 191,1)\",\n            data: [props.dataComparison[2].onboardedFiles, props.dataComparison[3].onboardedFiles]\n          },\n          {\n            label: \"Offboarded Files\",\n            backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n            borderColor: \"rgba(255, 204, 255,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n            hoverBorderColor: \"rgba(255, 204, 255,1)\",\n            data: [props.dataComparison[2].offboardedFiles, props.dataComparison[3].offboardedFiles]\n          },\n\n        ],\n\n      };\n      return chartDataConfigComparison\n    }\n\n  }\n  const handleChange = (e) => {\n    props.setQuery(e.target.value)\n  }\n  const handleTypeChange = (e) => {\n    props.setTypeQuery(e.target.value)\n  }\n\n  return (\n\n    <div style={{ width: \"50%\", textAlign: \"center\", padding: \"40px\" }}>\n      <h1>Client Adoption and Offboarding</h1>\n      <div>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\", marginRight: \"20px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.typeQuery}\n          onChange={handleTypeChange}\n\n        >\n          <MenuItem value={\"BRData\"}>BR Data</MenuItem>\n          <MenuItem value={\"FileData\"}>File Data</MenuItem>\n\n        </Select>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.activeQuery}\n          onChange={handleChange}\n\n        >\n          {props.dataComparison.map(({ year }) => (\n            <MenuItem key={year} value={year}>{year}</MenuItem>\n          ))}\n          <MenuItem value={\"2018/2019\"}>2018/2019</MenuItem>\n        </Select>\n\n      </div>\n\n      <HorizontalBar\n        options={{\n          scales: {\n            xAxes: [{\n              ticks: {\n                beginAtZero: true\n              },\n              scaleLabel: {\n                display: true,\n                fontSize: 16,\n                labelString: Xlabel,\n              }\n            }]\n          }\n        }}\n        data={getData} />\n\n    </div>\n  );\n\n};\n\nexport default ClientDataChart;\n"]},"metadata":{},"sourceType":"module"}