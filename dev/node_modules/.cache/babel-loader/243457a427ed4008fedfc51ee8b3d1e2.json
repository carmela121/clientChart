{"ast":null,"code":"import _slicedToArray from\"/Users/ccrm/Desktop/projects/chartjs/dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Line}from\"react-chartjs-2\";import automationData from\"./burndownData\";var AutomationRealTimeChart=function AutomationRealTimeChart(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),initialState=_React$useState2[0],setInitialState=_React$useState2[1];var _React$useState3=React.useState({labels:automationData.map(function(item){return item.Day;}),datasets:[{label:\"Current State\",fill:false,lineTension:0.1,backgroundColor:\"rgba(75,192,192,0.4)\",borderColor:\"rgba(75,192,192,1)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgba(75,192,192,1)\",pointBackgroundColor:\"#fff\",pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:\"rgba(75,192,192,1)\",pointHoverBorderColor:\"rgba(220,220,220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:automationData.map(function(item){return item[\"Current state\"];})},{label:\"Improved State\",fill:false,lineTension:0.1,backgroundColor:\"rgba(255, 0, 0, 0.6)\",borderColor:\"rgba(255, 0, 0, 1)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgba(255, 0, 0, 1)\",pointBackgroundColor:\"#fff\",pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:\"rgba(255, 0, 0, 1)\",pointHoverBorderColor:\"rgba(220,220,220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:automationData.map(function(item){return item[\"Improved State\"];})},{label:\"Optimal State\",fill:false,lineTension:0.1,backgroundColor:\"rgb(241, 226, 95, 0.4)\",borderColor:\"rgb(241, 226, 95, 1)\",borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0.0,borderJoinStyle:\"miter\",pointBorderColor:\"rgb(241, 226, 95, 1)\",pointBackgroundColor:\"#fff\",pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:\"rgb(241, 226, 95, 1)\",pointHoverBorderColor:\"rgba(220,220,220,1)\",pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:automationData.map(function(item){return item[\"Optimal State\"];})}]}),_React$useState4=_slicedToArray(_React$useState3,2),data=_React$useState4[0],setData=_React$useState4[1];return/*#__PURE__*/React.createElement(\"div\",{style:{width:\"80%\",margin:\"40px auto\"},id:\"chart\"},/*#__PURE__*/React.createElement(Line,{data:data,options:{scales:{xAxes:[{ticks:{pointHitRadius:4}}]},animation:{duration:10000}}}));};export default AutomationRealTimeChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/automation/AutomationRealTime.jsx"],"names":["React","Line","automationData","AutomationRealTimeChart","useState","initialState","setInitialState","labels","map","item","Day","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","setData","width","margin","scales","xAxes","ticks","animation","duration"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,gBAA3B,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,qBACIH,KAAK,CAACI,QAAN,CAAe,EAAf,CADJ,oDAC7BC,YAD6B,qBACfC,eADe,0CAEZN,KAAK,CAACI,QAAN,CAAe,CACrCG,MAAM,CAAEL,cAAc,CAACM,GAAf,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAf,EAAnB,CAD6B,CAErCC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,eADT,CAEEC,IAAI,CAAE,KAFR,CAGEC,WAAW,CAAE,GAHf,CAIEC,eAAe,CAAE,sBAJnB,CAKEC,WAAW,CAAE,oBALf,CAMEC,cAAc,CAAE,MANlB,CAOEC,UAAU,CAAE,EAPd,CAQEC,gBAAgB,CAAE,GARpB,CASEC,eAAe,CAAE,OATnB,CAUEC,gBAAgB,CAAE,oBAVpB,CAWEC,oBAAoB,CAAE,MAXxB,CAYEC,gBAAgB,CAAE,CAZpB,CAaEC,gBAAgB,CAAE,CAbpB,CAcEC,yBAAyB,CAAE,oBAd7B,CAeEC,qBAAqB,CAAE,qBAfzB,CAgBEC,qBAAqB,CAAE,CAhBzB,CAiBEC,WAAW,CAAE,CAjBf,CAkBEC,cAAc,CAAE,EAlBlB,CAmBEC,IAAI,CAAE5B,cAAc,CAACM,GAAf,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,eAAD,CAAd,EAAnB,CAnBR,CADQ,CAsBR,CACEG,KAAK,CAAE,gBADT,CAEEC,IAAI,CAAE,KAFR,CAGEC,WAAW,CAAE,GAHf,CAIEC,eAAe,CAAE,sBAJnB,CAKEC,WAAW,CAAE,oBALf,CAMEC,cAAc,CAAE,MANlB,CAOEC,UAAU,CAAE,EAPd,CAQEC,gBAAgB,CAAE,GARpB,CASEC,eAAe,CAAE,OATnB,CAUEC,gBAAgB,CAAE,oBAVpB,CAWEC,oBAAoB,CAAE,MAXxB,CAYEC,gBAAgB,CAAE,CAZpB,CAaEC,gBAAgB,CAAE,CAbpB,CAcEC,yBAAyB,CAAE,oBAd7B,CAeEC,qBAAqB,CAAE,qBAfzB,CAgBEC,qBAAqB,CAAE,CAhBzB,CAiBEC,WAAW,CAAE,CAjBf,CAkBEC,cAAc,CAAE,EAlBlB,CAmBEC,IAAI,CAAE5B,cAAc,CAACM,GAAf,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,gBAAD,CAAd,EAAnB,CAnBR,CAtBQ,CA2CR,CACEG,KAAK,CAAE,eADT,CAEEC,IAAI,CAAE,KAFR,CAGEC,WAAW,CAAE,GAHf,CAIEC,eAAe,CAAE,wBAJnB,CAKEC,WAAW,CAAE,sBALf,CAMEC,cAAc,CAAE,MANlB,CAOEC,UAAU,CAAE,EAPd,CAQEC,gBAAgB,CAAE,GARpB,CASEC,eAAe,CAAE,OATnB,CAUEC,gBAAgB,CAAE,sBAVpB,CAWEC,oBAAoB,CAAE,MAXxB,CAYEC,gBAAgB,CAAE,CAZpB,CAaEC,gBAAgB,CAAE,CAbpB,CAcEC,yBAAyB,CAAE,sBAd7B,CAeEC,qBAAqB,CAAE,qBAfzB,CAgBEC,qBAAqB,CAAE,CAhBzB,CAiBEC,WAAW,CAAE,CAjBf,CAkBEC,cAAc,CAAE,EAlBlB,CAmBEC,IAAI,CAAE5B,cAAc,CAACM,GAAf,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,eAAD,CAAd,EAAnB,CAnBR,CA3CQ,CAF2B,CAAf,CAFY,qDAE7BqB,IAF6B,qBAEvBC,OAFuB,qBAwEpC,mBACE,2BAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAgBC,MAAM,CAAE,WAAxB,CAAZ,CAAmD,EAAE,CAAC,OAAtD,eACE,oBAAC,IAAD,EACE,IAAI,CAAEH,IADR,CAEE,OAAO,CAAE,CACPI,MAAM,CAAE,CACNC,KAAK,CAAE,CAAC,CACNC,KAAK,CAAE,CACLP,cAAc,CAAE,CADX,CADD,CAAD,CADD,CADD,CAQPQ,SAAS,CAAE,CACTC,QAAQ,CAAE,KADD,CARJ,CAFX,EADF,CADF,CAoBD,CA5FD,CA8FA,cAAenC,CAAAA,uBAAf","sourcesContent":["import React from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport automationData from \"./burndownData\";\n\nconst AutomationRealTimeChart = () => {\n  const [initialState, setInitialState] = React.useState([]);\n  const [data, setData] = React.useState({\n    labels: automationData.map((item) => item.Day),\n    datasets: [\n      {\n        label: \"Current State\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: automationData.map((item) => item[\"Current state\"]),\n      },\n      {\n        label: \"Improved State\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(255, 0, 0, 0.6)\",\n        borderColor: \"rgba(255, 0, 0, 1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(255, 0, 0, 1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(255, 0, 0, 1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: automationData.map((item) => item[\"Improved State\"]),\n      },\n      {\n        label: \"Optimal State\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgb(241, 226, 95, 0.4)\",\n        borderColor: \"rgb(241, 226, 95, 1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgb(241, 226, 95, 1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(241, 226, 95, 1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: automationData.map((item) => item[\"Optimal State\"]),\n      },\n    ],\n  });\n\n\n  return (\n    <div style={{ width: \"80%\", margin: \"40px auto\" }} id=\"chart\">\n      <Line\n        data={data}\n        options={{\n          scales: {\n            xAxes: [{\n              ticks: {\n                pointHitRadius: 4\n              }\n            }]\n          },\n          animation: {\n            duration: 10000\n          }\n        }}\n\n      />\n    </div>\n  );\n};\n\nexport default AutomationRealTimeChart;"]},"metadata":{},"sourceType":"module"}