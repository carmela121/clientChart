{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx\";\nimport React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport dataProcess from './data';\n\nconst HeatMap = props => {\n  const [chartOptions, setOptions] = React.useState({});\n  const [chartSeries, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [customerData, setCustomerData] = React.useState([]);\n  const dataOptions = {\n    chart: {\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 500,\n            color: \"#00cefb\",\n            name: \"0 - 500\"\n          }, {\n            from: 501,\n            to: 2000,\n            color: \"#00cefb\",\n            name: \"501 - 1000\"\n          }, {\n            from: 2000,\n            to: 5000,\n            color: \"#008ffb\",\n            name: \"2000 - 5000\"\n          }]\n        }\n      }\n    },\n    xaxis: {\n      categories: dataProcess.map(item => item[\"Location code\"])\n    },\n    dataLabels: {\n      enabled: true,\n      style: {\n        colors: [\"#787878\"]\n      }\n    },\n    colors: [\"#008FFB\"]\n  };\n  const dataSeries = [{\n    name: \"Manual Closures\",\n    data: dataProcess.map(item => item[\"Manual Closures\"])\n  }, {\n    name: \"RPA Closures\",\n    data: dataProcess.map(item => item[\"RPA Closures\"])\n  }, {\n    name: \"Closures with script available\",\n    data: dataProcess.map(item => item[\"Closures with script available\"])\n  }];\n  React.useEffect(() => {\n    setOptions(dataOptions);\n    getSeries(dataSeries);\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Chart loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Client Processes\"), /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: chartOptions,\n    series: chartSeries,\n    type: \"heatmap\",\n    height: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx"],"names":["React","ReactApexChart","dataProcess","HeatMap","props","chartOptions","setOptions","useState","chartSeries","getSeries","loading","setLoading","customerData","setCustomerData","dataOptions","chart","toolbar","show","plotOptions","heatmap","radius","colorScale","ranges","from","to","color","name","xaxis","categories","map","item","dataLabels","enabled","style","colors","dataSeries","data","useEffect","padding","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport dataProcess from './data';\nconst HeatMap = (props) => {\n\n  const [chartOptions, setOptions] = React.useState({});\n  const [chartSeries, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [customerData, setCustomerData] = React.useState([])\n\n  const dataOptions = {\n    chart: {\n      toolbar: {\n        show: false,\n      }\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 500,\n            color: \"#00cefb\",\n            name: \"0 - 500\"\n          },\n          {\n            from: 501,\n            to: 2000,\n            color: \"#00cefb\",\n            name: \"501 - 1000\"\n          },\n          {\n            from: 2000,\n            to: 5000,\n            color: \"#008ffb\",\n            name: \"2000 - 5000\"\n          }\n          ]\n        }\n\n      }\n    },\n    xaxis: {\n      categories: dataProcess.map((item) => item[\"Location code\"])\n    },\n    dataLabels: {\n      enabled: true,\n      style: {\n        colors: [\"#787878\"]\n      },\n    },\n    colors: [\"#008FFB\"],\n  };\n  const dataSeries = [{\n    name: \"Manual Closures\",\n    data: dataProcess.map((item) => item[\"Manual Closures\"])\n  },\n  {\n    name: \"RPA Closures\",\n    data: dataProcess.map((item) => item[\"RPA Closures\"])\n  },\n  {\n    name: \"Closures with script available\",\n    data: dataProcess.map((item) => item[\"Closures with script available\"])\n  }]\n  React.useEffect(() => {\n\n    setOptions(dataOptions);\n    getSeries(dataSeries)\n    setLoading(false);\n\n  }, []);\n\n\n\n  return (\n\n    <div style={{ padding: \"40px\" }} >\n      {loading && <p>Chart loading...</p>}\n      <div className=\"mixed-chart\" style={{ margin: \"auto\" }}>\n        <h1>Client Processes</h1>\n        <ReactApexChart\n          options={chartOptions}\n          series={chartSeries}\n          type=\"heatmap\"\n          height=\"200px\"\n\n        />\n      </div>\n    </div >\n\n  );\n}\n\n\nexport default HeatMap;"]},"metadata":{},"sourceType":"module"}