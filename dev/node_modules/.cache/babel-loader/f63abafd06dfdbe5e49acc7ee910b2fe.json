{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/BarChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport ClientDataChart from './ClientDataChart';\n\nconst Chart = props => {\n  const [activeQuery, setActiveQuery] = useState('2020');\n  const [clientData, setData] = useState([]);\n  const [clientDataComparison, setDataComparison] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetch(`http://localhost:5000/client/${activeQuery}`).then(res => res.json()).then(data => {\n      setData(data);\n      setLoading(false);\n    }).catch(error => setError(error));\n  }, [activeQuery]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/client\").then(res => res.json()).then(data => {\n      setDataComparison(data);\n      setLoading(false);\n    }).catch(error => setError(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \"Chart loading...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, error.message), /*#__PURE__*/React.createElement(ClientDataChart, {\n    activeQuery: activeQuery,\n    typeQuery: typeQuery,\n    setQuery: setActiveQuery,\n    data: clientData,\n    dataComparison: clientDataComparison,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/BarChart.js"],"names":["React","useState","useEffect","ClientDataChart","Chart","props","activeQuery","setActiveQuery","clientData","setData","clientDataComparison","setDataComparison","loading","setLoading","error","setError","fetch","then","res","json","data","catch","message","typeQuery"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,MAAD,CAA9C;AACA,QAAM,CAACO,UAAD,EAAaC,OAAb,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,oBAAD,EAAuBC,iBAAvB,IAA4CV,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAE,gCAA+BV,WAAY,EAA7C,CAAL,CACGW,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACW,IAAD,CAAP;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGQ,KANH,CAMUP,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAN5B;AAOD,GARQ,EAQN,CAACR,WAAD,CARM,CAAT;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZT,MAAAA,iBAAiB,CAACS,IAAD,CAAjB;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGQ,KANH,CAMUP,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAN5B;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFd,EAGGE,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACQ,OAAV,CAHZ,eAKE,oBAAC,eAAD;AACE,IAAA,WAAW,EAAEhB,WADf;AAEE,IAAA,SAAS,EAAEiB,SAFb;AAGE,IAAA,QAAQ,EAAEhB,cAHZ;AAIE,IAAA,IAAI,EAAEC,UAJR;AAKE,IAAA,cAAc,EAAEE,oBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF;AAgBD,CA5CD;;AA8CA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ClientDataChart from './ClientDataChart'\n\n\nconst Chart = (props) => {\n  const [activeQuery, setActiveQuery] = useState('2020');\n  const [clientData, setData] = useState([]);\n  const [clientDataComparison, setDataComparison] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('')\n\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/client/${activeQuery}`)\n      .then(res => res.json())\n      .then(data => {\n        setData(data);\n        setLoading(false);\n      })\n      .catch((error) => setError(error));\n  }, [activeQuery]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/client\")\n      .then(res => res.json())\n      .then(data => {\n        setDataComparison(data);\n        setLoading(false);\n      })\n      .catch((error) => setError(error));\n  }, []);\n\n  return (\n\n    <div>\n\n      {loading && <p>Chart loading...</p>}\n      {error && <p>{error.message}</p>}\n\n      <ClientDataChart\n        activeQuery={activeQuery}\n        typeQuery={typeQuery}\n        setQuery={setActiveQuery}\n        data={clientData}\n        dataComparison={clientDataComparison}\n      />\n    </div>\n  )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}