{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/dashboard/Dashboard.jsx\";\nimport React from \"react\";\nimport { Tabs, Tab, Typography, Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport dataProcess from '../clientProcesses/data';\nimport Chart from '../clientAdoption/BarChart';\nimport HeatMap from '../clientProcesses/HeatMap';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, children));\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    marginTop: \"10px\"\n  }\n}));\n\nconst Dashboard = props => {\n  const [value, setValue] = React.useState(0);\n  const [customerData, setCustomerData] = React.useState([]);\n  const [dataByRegion, setDataByRegion] = React.useState([]);\n  const [activeQuery, setActiveQuery] = React.useState(\"Hubs\");\n  React.useEffect(() => {\n    setCustomerData(dataProcess);\n  }, []);\n  React.useEffect(() => {\n    const result = customerData.filter(item => item.Region === activeQuery);\n    console.log(result);\n    setDataByRegion(result);\n  }, [activeQuery, customerData]);\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Adoption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Processes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeatMap, {\n    data: dataByRegion,\n    activeQuery: activeQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/dashboard/Dashboard.jsx"],"names":["React","Tabs","Tab","Typography","Box","PropTypes","dataProcess","Chart","HeatMap","makeStyles","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","marginTop","Dashboard","setValue","useState","customerData","setCustomerData","dataByRegion","setDataByRegion","activeQuery","setActiveQuery","useEffect","result","filter","item","Region","console","log","classes","handleChange","event","newValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Tabs, Tab, Typography, Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport dataProcess from '../clientProcesses/data'\nimport Chart from '../clientAdoption/BarChart'\nimport HeatMap from '../clientProcesses/HeatMap'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    marginTop: \"10px\"\n  },\n}));\nconst Dashboard = (props) => {\n  const [value, setValue] = React.useState(0)\n  const [customerData, setCustomerData] = React.useState([])\n  const [dataByRegion, setDataByRegion] = React.useState([])\n  const [activeQuery, setActiveQuery] = React.useState(\"Hubs\")\n\n  React.useEffect(() => {\n    setCustomerData(dataProcess)\n\n  }, [])\n  React.useEffect(() => {\n\n    const result = customerData.filter(item => item.Region === activeQuery);\n    console.log(result)\n    setDataByRegion(result)\n\n\n  }, [activeQuery, customerData]);\n  const classes = useStyles()\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n  return (\n    <div className={classes.root}>\n      <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" centered>\n        <Tab label=\"Adoption\" />\n        <Tab label=\"Processes\" />\n\n      </Tabs>\n\n      <TabPanel value={value} index={0}>\n        <Chart />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <HeatMap data={dataByRegion} activeQuery={activeQuery} />\n      </TabPanel>\n\n    </div>\n  )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}