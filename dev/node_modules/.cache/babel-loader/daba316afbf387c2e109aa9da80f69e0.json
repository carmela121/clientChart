{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/ClientDataChart.js\";\nimport React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClientDataChart = props => {\n  const getData = () => {\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"BRData\") {\n      const {\n        onboardedBRs,\n        offboardedBRs\n      } = props.data;\n      const dataStructure = {\n        \"Onboarded BRs\": onboardedBRs,\n        \"Offboarded BRs\": offboardedBRs\n      };\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\"\n        }],\n        options: {\n          scales: {\n            xAxes: [{\n              ticks: {\n                callback: function (value, index, values) {\n                  return '$' + value;\n                }\n              }\n            }]\n          }\n        }\n      };\n      return chartDataConfig;\n    }\n\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"FileData\") {\n      const {\n        onboardedFiles,\n        offboardedFiles\n      } = props.data;\n      const dataStructure = {\n        \"Onboarded Files\": onboardedFiles,\n        \"Offboarded Files\": offboardedFiles\n      };\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\"\n        }]\n      };\n      return chartDataConfig;\n    }\n\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"BRData\") {\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [{\n          label: \"Onboarded BRs\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n          data: [props.dataComparison[2].onboardedBRs, props.dataComparison[3].onboardedBRs]\n        }, {\n          label: \"Offboarded BRs\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n          data: [props.dataComparison[2].offboardedBRs, props.dataComparison[3].offboardedBRs]\n        }]\n      };\n      return chartDataConfigComparison;\n    }\n\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"FileData\") {\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [{\n          label: \"Onboarded Files\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n          data: [props.dataComparison[2].onboardedFiles, props.dataComparison[3].onboardedFiles]\n        }, {\n          label: \"Offboarded Files\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n          data: [props.dataComparison[2].offboardedFiles, props.dataComparison[3].offboardedFiles]\n        }]\n      };\n      return chartDataConfigComparison;\n    }\n  };\n\n  const handleChange = e => {\n    props.setQuery(e.target.value);\n  };\n\n  const handleTypeChange = e => {\n    props.setTypeQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      textAlign: \"center\",\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"Client Adoption and Offboarding\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\",\n      marginRight: \"20px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.typeQuery,\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"BRData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"BR Data\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"FileData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"File Data\")), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.activeQuery,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2020\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"2020\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2019\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"2019\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2018\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"2018\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2017\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"2017\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2016\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"2016\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2018/2019\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"2018/2019\"))), /*#__PURE__*/React.createElement(HorizontalBar, {\n    options: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    data: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClientDataChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/ClientDataChart.js"],"names":["React","HorizontalBar","Select","MenuItem","ClientDataChart","props","getData","activeQuery","typeQuery","onboardedBRs","offboardedBRs","data","dataStructure","chartDataConfig","labels","Object","keys","datasets","values","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","scales","xAxes","ticks","callback","value","index","onboardedFiles","offboardedFiles","chartDataConfigComparison","dataComparison","year","handleChange","e","setQuery","target","handleTypeChange","setTypeQuery","width","textAlign","padding","marginBottom","marginRight","beginAtZero"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClientDataChart = (props) => {\n  const getData = () => {\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"BRData\") {\n\n      const {\n        onboardedBRs,\n        offboardedBRs,\n\n      } = props.data;\n\n      const dataStructure = {\n        \"Onboarded BRs\": onboardedBRs,\n        \"Offboarded BRs\": offboardedBRs,\n\n      };\n\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n        }],\n\n        options: {\n          scales: {\n            xAxes: [{\n              ticks: {\n                callback: function (value, index, values) {\n                  return '$' + value;\n                }\n              }\n            }]\n          }\n        }\n\n      };\n      return chartDataConfig\n    }\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"FileData\") {\n\n      const {\n\n        onboardedFiles,\n        offboardedFiles,\n      } = props.data;\n\n      const dataStructure = {\n\n        \"Onboarded Files\": onboardedFiles,\n        \"Offboarded Files\": offboardedFiles,\n      };\n\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n        }],\n\n      };\n      return chartDataConfig\n    }\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"BRData\") {\n\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [\n          {\n            label: \"Onboarded BRs\",\n            backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n            borderColor: \"rgba(120, 139, 191,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n            hoverBorderColor: \"rgba(120, 139, 191,1)\",\n            data: [props.dataComparison[2].onboardedBRs, props.dataComparison[3].onboardedBRs]\n          },\n          {\n            label: \"Offboarded BRs\",\n            backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n            borderColor: \"rgba(255, 204, 255,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n            hoverBorderColor: \"rgba(255, 204, 255,1)\",\n            data: [props.dataComparison[2].offboardedBRs, props.dataComparison[3].offboardedBRs]\n          },\n\n        ],\n\n      };\n      return chartDataConfigComparison\n    }\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"FileData\") {\n\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[2].year, props.dataComparison[3].year],\n        datasets: [\n          {\n            label: \"Onboarded Files\",\n            backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n            borderColor: \"rgba(120, 139, 191,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n            hoverBorderColor: \"rgba(120, 139, 191,1)\",\n            data: [props.dataComparison[2].onboardedFiles, props.dataComparison[3].onboardedFiles]\n          },\n          {\n            label: \"Offboarded Files\",\n            backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n            borderColor: \"rgba(255, 204, 255,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n            hoverBorderColor: \"rgba(255, 204, 255,1)\",\n            data: [props.dataComparison[2].offboardedFiles, props.dataComparison[3].offboardedFiles]\n          },\n\n        ],\n\n      };\n      return chartDataConfigComparison\n    }\n\n  }\n\n  const handleChange = (e) => {\n    props.setQuery(e.target.value)\n  }\n  const handleTypeChange = (e) => {\n    props.setTypeQuery(e.target.value)\n  }\n\n  return (\n\n    <div style={{ width: \"50%\", textAlign: \"center\", padding: \"40px\" }}>\n      <h1>Client Adoption and Offboarding</h1>\n      <div>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\", marginRight: \"20px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.typeQuery}\n          onChange={handleTypeChange}\n\n        >\n          <MenuItem value={\"BRData\"}>BR Data</MenuItem>\n          <MenuItem value={\"FileData\"}>File Data</MenuItem>\n\n        </Select>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.activeQuery}\n          onChange={handleChange}\n\n        >\n          <MenuItem value={\"2020\"}>2020</MenuItem>\n          <MenuItem value={\"2019\"}>2019</MenuItem>\n          <MenuItem value={\"2018\"}>2018</MenuItem>\n          <MenuItem value={\"2017\"}>2017</MenuItem>\n          <MenuItem value={\"2016\"}>2016</MenuItem>\n          <MenuItem value={\"2018/2019\"}>2018/2019</MenuItem>\n        </Select>\n\n\n\n      </div>\n\n      <HorizontalBar options={{\n\n        scales: {\n\n          xAxes: [{\n\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n\n\n      }} data={getData} />\n\n    </div>\n  );\n\n};\n\nexport default ClientDataChart;\n"]},"metadata":{},"sourceType":"module"}