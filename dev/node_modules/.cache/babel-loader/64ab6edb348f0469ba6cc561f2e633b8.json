{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx\";\nimport React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SystemClosureTable from \"./SystemClosureTable\";\n\nconst HeatMap = props => {\n  const [closureSystems, setClosureSystems] = React.useState([]);\n  const [PAChecks, setPAChecks] = React.useState([]);\n  const [openModal, setOpenModal] = React.useState(false);\n  const [location, setLocation] = React.useState([]);\n  const [rangeColour, setRangeColour] = React.useState(\"#4bb0ff\");\n\n  const getData = systems => {\n    if (Array.isArray(systems) && systems.length > 0) {\n      const closure = systems[0][\"Closure Systems\"];\n      const pachecks = systems[0][\"P&A Check Systems\"];\n\n      if (props.activeQueryMethod === \"Closures\") {\n        console.log(props.activeQueryMethod);\n        return closure;\n      }\n\n      if (props.activeQueryMethod === \"P & A checks\") {\n        return pachecks;\n      }\n    } else {\n      return [];\n    }\n  };\n\n  const dataOptionsClosures = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      events: {\n        click: function (event, chartContext, config) {\n          let el = event.target;\n          let dataPointIndex = parseInt(el.getAttribute(\"j\"));\n          const results = props.data.filter((item, i) => i === dataPointIndex);\n          const country = results.map(item => item[\"Location code\"]);\n          setClosureSystems(getData(results));\n          setLocation(country);\n          setOpenModal(true);\n        },\n        mouseMove: (event, chartContext, config) => {\n          let el = event.target;\n          let range = el.getAttribute(\"data:default-text\");\n          console.log(range);\n\n          if (range === \"0-1000\") {\n            setRangeColour(\"#b30000\");\n          } else {\n            setRangeColour(\"#4bb0ff\");\n          }\n        }\n      }\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 1000,\n            color: rangeColour,\n            name: \"0-1000\"\n          }, {\n            from: 1001,\n            to: 4000,\n            color: \"#0063b0\",\n            name: \"2001-4000\"\n          }, {\n            from: 4001,\n            to: 6000,\n            color: \"#003863\",\n            name: \"4001-6000\"\n          }]\n        }\n      }\n    },\n    xaxis: {\n      categories: props.data.map(({\n        [\"Location code\"]: location\n      }) => location)\n    },\n    dataLabels: {\n      enabled: true\n    },\n    title: {\n      text: 'Method',\n      margin: 10,\n      offsetX: 40,\n      offsetY: 10,\n      floating: true,\n      style: {\n        fontSize: '16px'\n      }\n    },\n    colors: [\"#008FFB\"]\n  };\n  const dataSeriesClosures = [//   {\n  //   name: \"Closures with script available\",\n  //   data: props.data.map((item) => item[\"Closures with script available\"])\n  // },\n  {\n    name: \"RPA Closures\",\n    data: props.data.map(item => item[\"RPA Closures\"])\n  }, {\n    name: \"Manual Closures\",\n    data: props.data.map(item => item[\"Manual Closures\"])\n  }];\n  const dataOptionsPA = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      events: {\n        click: function (event, chartContext, config) {\n          let el = event.target;\n          let dataPointIndex = parseInt(el.getAttribute(\"j\"));\n          const results = props.data.filter((item, i) => i === dataPointIndex);\n          const country = results.map(item => item[\"Location code\"]);\n          setPAChecks(getData(results));\n          setLocation(country);\n          setOpenModal(true);\n        }\n      }\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 2000,\n            color: \"#4bb0ff\",\n            name: \"0 - 2000\"\n          }, {\n            from: 2001,\n            to: 4000,\n            color: \"#0063b0\",\n            name: \"2001 - 4000\"\n          }, {\n            from: 4001,\n            to: 6000,\n            color: \"#003863\",\n            name: \"4001 - 6000\"\n          }]\n        }\n      }\n    },\n    xaxis: {\n      categories: props.data.map(({\n        [\"Location code\"]: location\n      }) => location)\n    },\n    dataLabels: {\n      enabled: true\n    },\n    title: {\n      text: 'Method',\n      margin: 10,\n      offsetX: 40,\n      offsetY: 10,\n      floating: true,\n      style: {\n        fontSize: '16px'\n      }\n    },\n    colors: [\"#008FFB\"]\n  };\n  const dataSeriesPA = [{\n    name: \"RPA P&A Checks\",\n    data: props.data.map(item => item[\"RPA P&A Checks\"])\n  }, // {\n  //   name: \"P&A Checks with script available\",\n  //   data: props.data.map((item) => item[\"P&A Checks with script available\"])\n  // },\n  {\n    name: \"Manual P&A Checks\",\n    data: props.data.map(item => item[\"Manual P&A Checks\"])\n  }];\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"60%\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, \"Offboarding Activities\"), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\",\n      marginRight: \"20px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.activeQueryMethod,\n    onChange: props.handleType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Closures\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, \"Closures\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"P & A checks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"P & A checks\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\",\n      marginRight: \"20px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.activeQuery,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Hubs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, \"Hubs\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"EMEA Branches\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"EMEA Branches\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"APAC Branches\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"APAC Branches\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"AMER Branches\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, \"AMER Branches\")), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, \"Number of accounts\"), props.activeQueryMethod === \"Closures\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: dataOptionsClosures,\n    series: dataSeriesClosures,\n    type: \"heatmap\",\n    height: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SystemClosureTable, {\n    handleClose: handleClose,\n    open: openModal,\n    region: location,\n    closureData: closureSystems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  })), props.activeQueryMethod === \"P & A checks\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: dataOptionsPA,\n    series: dataSeriesPA,\n    type: \"heatmap\",\n    height: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SystemClosureTable, {\n    handleClose: handleClose,\n    open: openModal,\n    region: location,\n    paChecks: PAChecks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  })), props.activeQueryMethod === \"All\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: dataOptionsClosures,\n    series: dataSeriesClosures,\n    type: \"heatmap\",\n    height: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SystemClosureTable, {\n    handleClose: handleClose,\n    open: openModal,\n    region: location,\n    closureData: closureSystems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, \"Country Code\"), /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: dataOptionsPA,\n    series: dataSeriesPA,\n    type: \"heatmap\",\n    height: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SystemClosureTable, {\n    handleClose: handleClose,\n    open: openModal,\n    region: location,\n    paChecks: PAChecks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Country Code\"))));\n};\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx"],"names":["React","ReactApexChart","Select","MenuItem","SystemClosureTable","HeatMap","props","closureSystems","setClosureSystems","useState","PAChecks","setPAChecks","openModal","setOpenModal","location","setLocation","rangeColour","setRangeColour","getData","systems","Array","isArray","length","closure","pachecks","activeQueryMethod","console","log","dataOptionsClosures","chart","toolbar","show","events","click","event","chartContext","config","el","target","dataPointIndex","parseInt","getAttribute","results","data","filter","item","i","country","map","mouseMove","range","plotOptions","heatmap","radius","colorScale","ranges","from","to","color","name","xaxis","categories","dataLabels","enabled","title","text","margin","offsetX","offsetY","floating","style","fontSize","colors","dataSeriesClosures","dataOptionsPA","dataSeriesPA","handleClose","width","textAlign","marginBottom","marginRight","handleType","activeQuery","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SystemClosureTable from \"./SystemClosureTable\"\nconst HeatMap = (props) => {\n  const [closureSystems, setClosureSystems] = React.useState([]);\n  const [PAChecks, setPAChecks] = React.useState([]);\n  const [openModal, setOpenModal] = React.useState(false);\n  const [location, setLocation] = React.useState([])\n  const [rangeColour, setRangeColour] = React.useState(\"#4bb0ff\")\n\n\n  const getData = (systems) => {\n\n    if (Array.isArray(systems) && systems.length > 0) {\n      const closure = systems[0][\"Closure Systems\"];\n      const pachecks = systems[0][\"P&A Check Systems\"]\n\n      if (props.activeQueryMethod === \"Closures\") {\n        console.log(props.activeQueryMethod)\n        return closure;\n      }\n      if (props.activeQueryMethod === \"P & A checks\") {\n\n        return pachecks;\n      }\n\n\n    } else {\n\n      return []\n    }\n\n  }\n\n  const dataOptionsClosures = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      events: {\n        click: function (event, chartContext, config) {\n          let el = event.target;\n          let dataPointIndex = parseInt(el.getAttribute(\"j\"));\n\n          const results = props.data.filter((item, i) => i === dataPointIndex)\n          const country = results.map((item) => item[\"Location code\"])\n          setClosureSystems(getData(results))\n          setLocation(country)\n          setOpenModal(true)\n        },\n        mouseMove: (event, chartContext, config) => {\n          let el = event.target;\n          let range = el.getAttribute(\"data:default-text\");\n          console.log(range)\n          if (range === \"0-1000\") {\n            setRangeColour(\"#b30000\");\n          } else {\n            setRangeColour(\"#4bb0ff\")\n          }\n        }\n      }\n    },\n\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 1000,\n            color: rangeColour,\n\n            name: \"0-1000\"\n          },\n          {\n            from: 1001,\n            to: 4000,\n            color: \"#0063b0\",\n            name: \"2001-4000\"\n          },\n          {\n            from: 4001,\n            to: 6000,\n            color: \"#003863\",\n            name: \"4001-6000\"\n          }]\n        }\n      }\n    },\n    xaxis: {\n      categories: props.data.map(({ [\"Location code\"]: location }) => location)\n    },\n    dataLabels: {\n      enabled: true,\n    },\n    title: {\n      text: 'Method',\n      margin: 10,\n      offsetX: 40,\n      offsetY: 10,\n      floating: true,\n      style: {\n        fontSize: '16px',\n\n      },\n\n    },\n\n    colors: [\"#008FFB\"],\n  };\n  const dataSeriesClosures = [\n    //   {\n    //   name: \"Closures with script available\",\n    //   data: props.data.map((item) => item[\"Closures with script available\"])\n    // },\n    {\n      name: \"RPA Closures\",\n      data: props.data.map((item) => item[\"RPA Closures\"])\n    },\n    {\n\n      name: \"Manual Closures\",\n      data: props.data.map((item) => item[\"Manual Closures\"])\n    }]\n\n  const dataOptionsPA = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      events: {\n        click: function (event, chartContext, config) {\n          let el = event.target;\n\n          let dataPointIndex = parseInt(el.getAttribute(\"j\"));\n\n          const results = props.data.filter((item, i) => i === dataPointIndex)\n\n          const country = results.map((item) => item[\"Location code\"])\n          setPAChecks(getData(results))\n          setLocation(country)\n          setOpenModal(true)\n        }\n      }\n    },\n\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 2000,\n            color: \"#4bb0ff\",\n            name: \"0 - 2000\"\n          },\n          {\n            from: 2001,\n            to: 4000,\n            color: \"#0063b0\",\n            name: \"2001 - 4000\"\n          },\n          {\n            from: 4001,\n            to: 6000,\n            color: \"#003863\",\n            name: \"4001 - 6000\"\n          }\n          ]\n        }\n\n      }\n    },\n    xaxis: {\n      categories: props.data.map(({ [\"Location code\"]: location }) => location)\n    },\n    dataLabels: {\n      enabled: true,\n\n    },\n    title: {\n      text: 'Method',\n      margin: 10,\n      offsetX: 40,\n      offsetY: 10,\n      floating: true,\n      style: {\n        fontSize: '16px',\n\n      },\n\n    },\n\n    colors: [\"#008FFB\"],\n  };\n  const dataSeriesPA = [{\n    name: \"RPA P&A Checks\",\n    data: props.data.map((item) => item[\"RPA P&A Checks\"])\n  },\n  // {\n  //   name: \"P&A Checks with script available\",\n  //   data: props.data.map((item) => item[\"P&A Checks with script available\"])\n  // },\n  {\n    name: \"Manual P&A Checks\",\n    data: props.data.map((item) => item[\"Manual P&A Checks\"])\n\n  }]\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n  return (\n\n    <div style={{ width: \"60%\", margin: \"auto\" }} >\n\n      <div className=\"mixed-chart\" style={{ margin: \"auto\" }}>\n        <h1>Offboarding Activities</h1>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\", marginRight: \"20px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.activeQueryMethod}\n          onChange={props.handleType}\n\n        >\n          <MenuItem value={\"Closures\"}>Closures</MenuItem>\n          <MenuItem value={\"P & A checks\"}>P & A checks</MenuItem>\n          <MenuItem value={\"All\"}>All</MenuItem>\n\n\n        </Select>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\", marginRight: \"20px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.activeQuery}\n          onChange={props.handleChange}\n\n        >\n          <MenuItem value={\"Hubs\"}>Hubs</MenuItem>\n          <MenuItem value={\"EMEA Branches\"}>EMEA Branches</MenuItem>\n          <MenuItem value={\"APAC Branches\"}>APAC Branches</MenuItem>\n          <MenuItem value={\"AMER Branches\"}>AMER Branches</MenuItem>\n\n        </Select>\n\n        <h5>Number of accounts</h5>\n        {props.activeQueryMethod === \"Closures\" &&\n          <div>\n            <ReactApexChart\n              options={dataOptionsClosures}\n              series={dataSeriesClosures}\n              type=\"heatmap\"\n              height=\"300px\"\n\n            />\n            <SystemClosureTable\n              handleClose={handleClose}\n              open={openModal}\n              region={location}\n              closureData={closureSystems}>\n\n            </SystemClosureTable>\n          </div>\n        }\n\n        {props.activeQueryMethod === \"P & A checks\" &&\n          <div>\n            <ReactApexChart\n              options={dataOptionsPA}\n              series={dataSeriesPA}\n              type=\"heatmap\"\n              height=\"300px\"\n\n            />\n            <SystemClosureTable\n              handleClose={handleClose}\n              open={openModal}\n              region={location}\n              paChecks={PAChecks}>\n\n\n            </SystemClosureTable>\n          </div>\n        }\n\n        {props.activeQueryMethod === \"All\" &&\n          <div>\n            <ReactApexChart\n              options={dataOptionsClosures}\n              series={dataSeriesClosures}\n              type=\"heatmap\"\n              height=\"300px\"\n\n            />\n            <SystemClosureTable\n              handleClose={handleClose}\n              open={openModal}\n              region={location}\n              closureData={closureSystems}>\n\n            </SystemClosureTable>\n            <p>Country Code</p>\n\n            <ReactApexChart\n              options={dataOptionsPA}\n              series={dataSeriesPA}\n              type=\"heatmap\"\n              height=\"300px\"\n\n            />\n\n            <SystemClosureTable\n              handleClose={handleClose}\n              open={openModal}\n              region={location}\n              paChecks={PAChecks}>\n\n\n            </SystemClosureTable>\n            <p>Country Code</p>\n          </div>}\n\n\n\n      </div>\n    </div >\n\n  );\n}\n\n\nexport default HeatMap;"]},"metadata":{},"sourceType":"module"}