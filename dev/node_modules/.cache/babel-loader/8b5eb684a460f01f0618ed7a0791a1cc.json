{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.js\";\nimport React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\n\nconst HeatMap = () => {\n  const dataSeries = [{\n    name: 'Metric1',\n    data: [50, 60, 80, 90]\n  }, {\n    name: 'Metric2',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric3',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric4',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric5',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric6',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric7',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric8',\n    data: [100, 200, 300, 400]\n  }, {\n    name: 'Metric9',\n    data: [100, 200, 300, 400]\n  }];\n  const dataOptions = {\n    chart: {\n      height: 350,\n      type: 'heatmap'\n    },\n    dataLabels: {\n      enabled: true\n    },\n    colors: [\"#008FFB\"],\n    title: {\n      text: 'HeatMap Chart (Single color)'\n    }\n  };\n  const {\n    options,\n    setOptions\n  } = React.useState({});\n  const [series, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    setOptions(dataOptions);\n    getSeries(dataSeries);\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"heatmap\", /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: options,\n    series: series,\n    type: \"heatmap\",\n    width: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.js"],"names":["React","ReactApexChart","HeatMap","dataSeries","name","data","dataOptions","chart","height","type","dataLabels","enabled","colors","title","text","options","setOptions","useState","series","getSeries","loading","setLoading","useEffect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,UAAU,GAAG,CACjB;AACEC,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAFR,GADiB,EAKjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GALiB,EASjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GATiB,EAajB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GAbiB,EAiBjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GAjBiB,EAqBjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GArBiB,EAyBjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GAzBiB,EA6BjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GA7BiB,EAiCjB;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFR,GAjCiB,CAAnB;AAwCA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KADW;AAKlBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC,KALM;AAQlBC,IAAAA,MAAM,EAAE,CAAC,SAAD,CARU;AASlBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD;AATW,GAApB;AAaA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BhB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBrB,KAAK,CAACiB,QAAN,CAAe,IAAf,CAA9B;AACAjB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AAEpBN,IAAAA,UAAU,CAACV,WAAD,CAAV;AACAa,IAAAA,SAAS,CAAChB,UAAD,CAAT;AACAkB,IAAAA,UAAU,CAAC,KAAD,CAAV;AAED,GAND,EAMG,EANH;AAOA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEI,oBAAC,cAAD;AACA,IAAA,OAAO,EAAEN,OADT;AAEA,IAAA,MAAM,EAAEG,MAFR;AAGA,IAAA,IAAI,EAAC,SAHL;AAIA,IAAA,KAAK,EAAC,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,CAFF;AAeD,CA/ED;;AAkFA,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\n\nconst HeatMap = () => {\n  const dataSeries = [\n    {\n      name: 'Metric1',\n      data: [50, 60, 80, 90]\n    },\n    {\n      name: 'Metric2',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric3',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric4',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric5',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric6',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric7',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric8',\n      data: [100, 200, 300, 400]\n    },\n    {\n      name: 'Metric9',\n      data: [100, 200, 300, 400]\n    }\n\n  ]\n\n  const dataOptions = {\n    chart: {\n      height: 350,\n      type: 'heatmap',\n    },\n    dataLabels: {\n      enabled: true\n    },\n    colors: [\"#008FFB\"],\n    title: {\n      text: 'HeatMap Chart (Single color)'\n    },\n  };\n  const { options, setOptions } = React.useState({});\n  const [series, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n\n    setOptions(dataOptions);\n    getSeries(dataSeries)\n    setLoading(false);\n\n  }, []);\n  return (\n\n    <div className=\"row\">\n      <div className=\"mixed-chart\">\n        heatmap\n          <ReactApexChart\n          options={options}\n          series={series}\n          type=\"heatmap\"\n          width=\"500\"\n        />\n      </div>\n    </div>\n\n  );\n}\n\n\nexport default HeatMap;"]},"metadata":{},"sourceType":"module"}