{"ast":null,"code":"import _slicedToArray from\"/Users/ccrm/Desktop/projects/chartjs/dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ClientDataChart from'./ClientDataChart';var Chart=function Chart(props){var clientData=[// {\n//   \"year\": \"2016\",\n//   \"onboardedBRs\": 209580,\n//   \"offboardedBRs\": 54587,\n//   \"onboardedFiles\": 99999,\n//   \"offboardedFiles\": 3710\n// },\n// {\n//   \"year\": \"2017\",\n//   \"onboardedBRs\": 208784,\n//   \"offboardedBRs\": 85594,\n//   \"onboardedFiles\": 55546,\n//   \"offboardedFiles\": 17207\n// },\n{\"year\":\"2018\",\"onboardedBRs\":126741,\"offboardedBRs\":135488,\"onboardedFiles\":24927,\"offboardedFiles\":37428},{\"year\":\"2019\",\"onboardedBRs\":105810,\"offboardedBRs\":113295,\"onboardedFiles\":27242,\"offboardedFiles\":44397},{\"year\":\"2020\",\"onboardedBRs\":42651,\"offboardedBRs\":39507,\"onboardedFiles\":6520,\"offboardedFiles\":14604}];var _useState=useState('2020'),_useState2=_slicedToArray(_useState,2),activeQuery=_useState2[0],setActiveQuery=_useState2[1];var _useState3=useState('FileData'),_useState4=_slicedToArray(_useState3,2),typeQuery=_useState4[0],setTypeQuery=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),clientDataComparison=_useState8[0],setDataComparison=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];useEffect(function(){var search=function search(activeQuery,clientData){for(var i=0;i<clientData.length;i++){if(clientData[i].year===activeQuery){setData(clientData[i]);}}};search(activeQuery,clientData);},[activeQuery]);useEffect(function(){setDataComparison(clientData);setLoading(false);},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"chart-container\",style:{textAlign:\"center\",margin:\"auto\"}},loading&&/*#__PURE__*/React.createElement(\"p\",null,\"Chart loading...\"),error&&/*#__PURE__*/React.createElement(\"p\",null,error.message),/*#__PURE__*/React.createElement(ClientDataChart,{activeQuery:activeQuery,typeQuery:typeQuery,setQuery:setActiveQuery,setTypeQuery:setTypeQuery,data:data,dataComparison:clientDataComparison}));};export default Chart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientAdoption/BarChart.jsx"],"names":["React","useState","useEffect","ClientDataChart","Chart","props","clientData","activeQuery","setActiveQuery","typeQuery","setTypeQuery","data","setData","clientDataComparison","setDataComparison","loading","setLoading","error","setError","search","i","length","year","textAlign","margin","message"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,GAAMC,CAAAA,UAAU,CAAG,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACE,OAAQ,MADV,CAEE,eAAgB,MAFlB,CAGE,gBAAiB,MAHnB,CAIE,iBAAkB,KAJpB,CAKE,kBAAmB,KALrB,CAfiB,CAsBjB,CACE,OAAQ,MADV,CAEE,eAAgB,MAFlB,CAGE,gBAAiB,MAHnB,CAIE,iBAAkB,KAJpB,CAKE,kBAAmB,KALrB,CAtBiB,CA6BjB,CACE,OAAQ,MADV,CAEE,eAAgB,KAFlB,CAGE,gBAAiB,KAHnB,CAIE,iBAAkB,IAJpB,CAKE,kBAAmB,KALrB,CA7BiB,CAAnB,CADuB,cAuCeL,QAAQ,CAAC,MAAD,CAvCvB,wCAuChBM,WAvCgB,eAuCHC,cAvCG,8BAwCWP,QAAQ,CAAC,UAAD,CAxCnB,yCAwChBQ,SAxCgB,eAwCLC,YAxCK,8BAyCCT,QAAQ,CAAC,EAAD,CAzCT,yCAyChBU,IAzCgB,eAyCVC,OAzCU,8BA0C2BX,QAAQ,CAAC,EAAD,CA1CnC,yCA0ChBY,oBA1CgB,eA0CMC,iBA1CN,8BA2COb,QAAQ,CAAC,IAAD,CA3Cf,0CA2ChBc,OA3CgB,gBA2CPC,UA3CO,gCA4CGf,QAAQ,CAAC,EAAD,CA5CX,2CA4ChBgB,KA5CgB,gBA4CTC,QA5CS,gBA+CvBhB,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACZ,WAAD,CAAcD,UAAd,CAA6B,CAE1C,IAAK,GAAIc,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGd,UAAU,CAACe,MAA/B,CAAuCD,CAAC,EAAxC,CAA4C,CAC1C,GAAId,UAAU,CAACc,CAAD,CAAV,CAAcE,IAAd,GAAuBf,WAA3B,CAAwC,CACtCK,OAAO,CAACN,UAAU,CAACc,CAAD,CAAX,CAAP,CACD,CAEF,CACF,CARD,CAUAD,MAAM,CAACZ,WAAD,CAAcD,UAAd,CAAN,CACD,CAZQ,CAYN,CAACC,WAAD,CAZM,CAAT,CAcAL,SAAS,CAAC,UAAM,CAEdY,iBAAiB,CAACR,UAAD,CAAjB,CACAU,UAAU,CAAC,KAAD,CAAV,CAED,CALQ,CAKN,EALM,CAAT,CAOA,mBAEE,2BAAK,SAAS,CAAC,iBAAf,CAAiC,KAAK,CAAE,CAAEO,SAAS,CAAE,QAAb,CAAuBC,MAAM,CAAE,MAA/B,CAAxC,EAEGT,OAAO,eAAI,gDAFd,CAGGE,KAAK,eAAI,6BAAIA,KAAK,CAACQ,OAAV,CAHZ,cAKE,oBAAC,eAAD,EACE,WAAW,CAAElB,WADf,CAEE,SAAS,CAAEE,SAFb,CAGE,QAAQ,CAAED,cAHZ,CAIE,YAAY,CAAEE,YAJhB,CAKE,IAAI,CAAEC,IALR,CAME,cAAc,CAAEE,oBANlB,EALF,CAFF,CAiBD,CArFD,CAuFA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ClientDataChart from './ClientDataChart'\n\n\nconst Chart = (props) => {\n  const clientData = [\n    // {\n    //   \"year\": \"2016\",\n    //   \"onboardedBRs\": 209580,\n    //   \"offboardedBRs\": 54587,\n    //   \"onboardedFiles\": 99999,\n    //   \"offboardedFiles\": 3710\n    // },\n    // {\n    //   \"year\": \"2017\",\n    //   \"onboardedBRs\": 208784,\n    //   \"offboardedBRs\": 85594,\n    //   \"onboardedFiles\": 55546,\n    //   \"offboardedFiles\": 17207\n    // },\n    {\n      \"year\": \"2018\",\n      \"onboardedBRs\": 126741,\n      \"offboardedBRs\": 135488,\n      \"onboardedFiles\": 24927,\n      \"offboardedFiles\": 37428\n    },\n    {\n      \"year\": \"2019\",\n      \"onboardedBRs\": 105810,\n      \"offboardedBRs\": 113295,\n      \"onboardedFiles\": 27242,\n      \"offboardedFiles\": 44397\n    },\n    {\n      \"year\": \"2020\",\n      \"onboardedBRs\": 42651,\n      \"offboardedBRs\": 39507,\n      \"onboardedFiles\": 6520,\n      \"offboardedFiles\": 14604\n    }\n  ]\n\n  const [activeQuery, setActiveQuery] = useState('2020');\n  const [typeQuery, setTypeQuery] = useState('FileData');\n  const [data, setData] = useState([]);\n  const [clientDataComparison, setDataComparison] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('')\n\n\n  useEffect(() => {\n    const search = (activeQuery, clientData) => {\n\n      for (var i = 0; i < clientData.length; i++) {\n        if (clientData[i].year === activeQuery) {\n          setData(clientData[i]);\n        }\n\n      }\n    }\n\n    search(activeQuery, clientData)\n  }, [activeQuery]);\n\n  useEffect(() => {\n\n    setDataComparison(clientData);\n    setLoading(false);\n\n  }, []);\n\n  return (\n\n    <div className=\"chart-container\" style={{ textAlign: \"center\", margin: \"auto\" }}>\n\n      {loading && <p>Chart loading...</p>}\n      {error && <p>{error.message}</p>}\n\n      <ClientDataChart\n        activeQuery={activeQuery}\n        typeQuery={typeQuery}\n        setQuery={setActiveQuery}\n        setTypeQuery={setTypeQuery}\n        data={data}\n        dataComparison={clientDataComparison}\n      />\n    </div>\n  )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}