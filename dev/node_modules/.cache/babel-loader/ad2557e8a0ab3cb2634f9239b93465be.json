{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/client/src/components/charts/BarChart.js\";\nimport React from 'react';\nimport { Switch, FormGroup, FormControlLabel } from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSet: null,\n      chartData: {\n        labels: [] // datasets: [{\n        //   label: 'Total population',\n        //   data: this.state.dataSet.map(({ total }) => total),\n        //   backgroundColor: [\n        //     'rgb(50, 168, 82)',\n        //     'rgb(168, 50, 50)',\n        //     'rgb(50, 144, 168)',\n        //     'rgb(142, 50, 168)',\n        //     'rgb(193, 201, 34)',\n        //     'rgb(64, 237, 231)',\n        //     'rgb(237, 64, 64)',\n        //     'rgb(32, 103, 135)']\n        // },\n        // {\n        //   label: 'Men',\n        //   data: this.state.dataSet.map(({ men }) => men),\n        //   backgroundColor: [\n        //     'rgb(65, 204, 103)',\n        //     'rgb(222, 73, 73)',\n        //     'rgb(78, 193, 222)',\n        //     'rgb(190, 70, 224)',\n        //     'rgb(219, 227, 68)',\n        //     'rgb(111, 227, 223)',\n        //     'rgb(237, 114, 114)',\n        //     'rgb(60, 158, 201)']\n        // },\n        // {\n        //   label: 'Women',\n        //   data: this.state.dataSet.map(({ women }) => women),\n        //   backgroundColor: [\n        //     'rgba(111, 227, 143)',\n        //     'rgba(240, 115, 115)',\n        //     'rgba(140, 218, 237)',\n        //     'rgba(211, 127, 235)',\n        //     'rgba(234, 240, 120)',\n        //     'rgba(182, 227, 225)',\n        //     'rgba(237, 164, 164)',\n        //     'rgb(106, 196, 235)']\n        // }\n        // ]\n\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000').then(response => response.json()).then(data => {\n      let labels = data.map(({\n        city\n      }) => city);\n      let total = data.map(({\n        total\n      }) => total);\n      let men = data.map(({\n        men\n      }) => men);\n      let women = data.map(({\n        women\n      }) => women);\n      let chartData = { ...this.state.chartData\n      };\n      chartData.labels = labels;\n      this.setState({\n        dataSet: data,\n        labels,\n        isLoading: false\n      });\n    }).catch(err => console.log('There was an error:' + err));\n  } // async componentDidMount() {\n  //   const response = await fetch('http://localhost:5000');\n  //   const data = await response.json();\n  //   let labels = data.map(({ city }) => city)\n  //   let total = data.map(({ total }) => total)\n  //   let men = data.map(({ men }) => men)\n  //   let women = data.map(({ women }) => women)\n  //   let chartData = { ...this.state.chartData }\n  //   chartData.labels = labels\n  //   this.setState({ labels, isLoading: false });\n  //   console.log(this.state.chartData.labels)\n  // }\n\n\n  render() {\n    console.log(this.state.dataSet);\n\n    if (this.state.isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      console.log(this.state.chartData);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        name: \"checkedA\",\n        onClick: this.props.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }), this.state.dataSet && /*#__PURE__*/React.createElement(Bar, {\n        data: this.state.chartData,\n        options: {\n          title: {\n            display: true,\n            text: \"AndalucÃ­a population by region\",\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 34\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/client/src/components/charts/BarChart.js"],"names":["React","Switch","FormGroup","FormControlLabel","Bar","Chart","Component","constructor","props","state","isLoading","dataSet","chartData","labels","componentDidMount","fetch","then","response","json","data","map","city","total","men","women","setState","catch","err","console","log","render","handleClick","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Switch, FormGroup, FormControlLabel } from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      dataSet: null,\n      chartData: {\n        labels: [],\n        // datasets: [{\n        //   label: 'Total population',\n        //   data: this.state.dataSet.map(({ total }) => total),\n        //   backgroundColor: [\n        //     'rgb(50, 168, 82)',\n        //     'rgb(168, 50, 50)',\n        //     'rgb(50, 144, 168)',\n        //     'rgb(142, 50, 168)',\n        //     'rgb(193, 201, 34)',\n        //     'rgb(64, 237, 231)',\n        //     'rgb(237, 64, 64)',\n        //     'rgb(32, 103, 135)']\n        // },\n        // {\n        //   label: 'Men',\n        //   data: this.state.dataSet.map(({ men }) => men),\n        //   backgroundColor: [\n        //     'rgb(65, 204, 103)',\n        //     'rgb(222, 73, 73)',\n        //     'rgb(78, 193, 222)',\n        //     'rgb(190, 70, 224)',\n        //     'rgb(219, 227, 68)',\n        //     'rgb(111, 227, 223)',\n        //     'rgb(237, 114, 114)',\n        //     'rgb(60, 158, 201)']\n        // },\n        // {\n        //   label: 'Women',\n        //   data: this.state.dataSet.map(({ women }) => women),\n        //   backgroundColor: [\n        //     'rgba(111, 227, 143)',\n        //     'rgba(240, 115, 115)',\n        //     'rgba(140, 218, 237)',\n        //     'rgba(211, 127, 235)',\n        //     'rgba(234, 240, 120)',\n        //     'rgba(182, 227, 225)',\n        //     'rgba(237, 164, 164)',\n        //     'rgb(106, 196, 235)']\n        // }\n        // ]\n\n      }\n    }\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:5000')\n      .then(response => response.json())\n      .then(data => {\n        let labels = data.map(({ city }) => city)\n        let total = data.map(({ total }) => total)\n        let men = data.map(({ men }) => men)\n        let women = data.map(({ women }) => women)\n        let chartData = { ...this.state.chartData }\n        chartData.labels = labels\n\n        this.setState({ dataSet: data, labels, isLoading: false })\n      })\n      .catch(err => console.log('There was an error:' + err))\n\n\n\n  }\n\n  // async componentDidMount() {\n  //   const response = await fetch('http://localhost:5000');\n  //   const data = await response.json();\n\n  //   let labels = data.map(({ city }) => city)\n  //   let total = data.map(({ total }) => total)\n  //   let men = data.map(({ men }) => men)\n  //   let women = data.map(({ women }) => women)\n  //   let chartData = { ...this.state.chartData }\n  //   chartData.labels = labels\n\n  //   this.setState({ labels, isLoading: false });\n  //   console.log(this.state.chartData.labels)\n  // }\n  render() {\n    console.log(this.state.dataSet)\n    if (this.state.isLoading) {\n      return <div>Loading...</div>\n    } else {\n      console.log(this.state.chartData)\n      return (\n        <div className=\"chart\">\n\n          <Switch name=\"checkedA\" onClick={this.props.handleClick} />\n\n          {this.state.dataSet && <Bar\n            data={this.state.chartData}\n\n            options={{\n              title: {\n                display: true,\n                text: \"AndalucÃ­a population by region\",\n                fontSize: 25\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              }\n            }}\n          />}\n        </div>\n\n      )\n    }\n\n\n  }\n\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}