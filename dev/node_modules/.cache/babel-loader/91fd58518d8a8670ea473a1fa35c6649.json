{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/dashboard/Dashboard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport dataProcess from '../clientProcesses/data';\nimport Chart from '../clientAdoption/BarChart';\nimport ClientOffboarding from '../clientProcesses/ClientOffboarding';\nimport AutomationRealTimeChart from '../automation/AutomationRealTime';\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, children));\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    height: \"82px\"\n  },\n  tabs: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst Dashboard = props => {\n  const [value, setValue] = React.useState(0);\n  const [customerData, setCustomerData] = React.useState([]);\n  React.useEffect(() => {\n    setCustomerData(dataProcess);\n  }, []);\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    color: \"default\",\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-text\",\n    src: props.textImage,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tabs, {\n    indicatorColor: \"secondary\",\n    textColor: \"secondary\",\n    className: classes.tabs,\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"dashboard\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Analysis\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Insights\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Result\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ClientOffboarding, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutomationRealTimeChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Dashboard; // import React from \"react\";\n// import { Tabs, Tab, Box } from '@material-ui/core';\n// import PropTypes from 'prop-types';\n// import dataProcess from '../clientProcesses/data';\n// import Chart from '../clientAdoption/BarChart';\n// import ClientOffboarding from '../clientProcesses/ClientOffboarding';\n// import AutomationRealTimeChart from '../automation/AutomationRealTime';\n// import { makeStyles } from '@material-ui/core/styles';\n// const TabPanel = (props) => {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`scrollable-auto-tabpanel-${index}`}\n//       aria-labelledby={`scrollable-auto-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && (\n//         <Box>\n//           {children}\n//         </Box>\n//       )}\n//     </div>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//     backgroundColor: theme.palette.background.paper,\n//     marginTop: \"10px\",\n//   },\n// }));\n// const Dashboard = (props) => {\n//   const [value, setValue] = React.useState(0)\n//   const [customerData, setCustomerData] = React.useState([])\n//   React.useEffect(() => {\n//     setCustomerData(dataProcess)\n//   }, [])\n//   const classes = useStyles()\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue)\n//   }\n//   return (\n//     <div className={classes.root}>\n//       <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" centered>\n//         <Tab label=\"Adoption\" />\n//         <Tab label=\"Processes\" />\n//         <Tab label=\"Result\" />\n//       </Tabs>\n//       <TabPanel value={value} index={0}>\n//         <Chart />\n//       </TabPanel>\n//       <TabPanel value={value} index={1}>\n//         <ClientOffboarding />\n//       </TabPanel>\n//       <TabPanel value={value} index={2}>\n//         <AutomationRealTimeChart />\n//       </TabPanel>\n//     </div>\n//   )\n// }\n// export default Dashboard;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/dashboard/Dashboard.jsx"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Box","dataProcess","Chart","ClientOffboarding","AutomationRealTimeChart","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","appBar","height","tabs","marginTop","Dashboard","setValue","useState","customerData","setCustomerData","useEffect","classes","handleChange","event","newValue","textImage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport dataProcess from '../clientProcesses/data';\nimport Chart from '../clientAdoption/BarChart';\nimport ClientOffboarding from '../clientProcesses/ClientOffboarding';\nimport AutomationRealTimeChart from '../automation/AutomationRealTime';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n\n  },\n  appBar: {\n    height: \"82px\"\n  },\n  tabs: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst Dashboard = (props) => {\n  const [value, setValue] = React.useState(0);\n  const [customerData, setCustomerData] = React.useState([]);\n\n  React.useEffect(() => {\n    setCustomerData(dataProcess)\n  }, [])\n  const classes = useStyles()\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} color=\"default\" position=\"static\">\n        <img className=\"logo-text\" src={props.textImage} alt=\"logo\"></img>\n        <Tabs\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          className={classes.tabs} value={value}\n          onChange={handleChange}\n          aria-label=\"dashboard\"\n          centered>\n          <Tab label=\"Analysis\" {...a11yProps(0)} />\n          <Tab label=\"Insights\" {...a11yProps(1)} />\n          <Tab label=\"Result\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Chart />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ClientOffboarding />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <AutomationRealTimeChart />\n      </TabPanel>\n    </div>\n  );\n}\n\n\nexport default Dashboard;\n\n// import React from \"react\";\n// import { Tabs, Tab, Box } from '@material-ui/core';\n// import PropTypes from 'prop-types';\n// import dataProcess from '../clientProcesses/data';\n// import Chart from '../clientAdoption/BarChart';\n// import ClientOffboarding from '../clientProcesses/ClientOffboarding';\n// import AutomationRealTimeChart from '../automation/AutomationRealTime';\n// import { makeStyles } from '@material-ui/core/styles';\n\n// const TabPanel = (props) => {\n//   const { children, value, index, ...other } = props;\n\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`scrollable-auto-tabpanel-${index}`}\n//       aria-labelledby={`scrollable-auto-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && (\n//         <Box>\n//           {children}\n//         </Box>\n//       )}\n//     </div>\n//   );\n// }\n\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//     backgroundColor: theme.palette.background.paper,\n//     marginTop: \"10px\",\n\n//   },\n// }));\n// const Dashboard = (props) => {\n//   const [value, setValue] = React.useState(0)\n//   const [customerData, setCustomerData] = React.useState([])\n\n//   React.useEffect(() => {\n//     setCustomerData(dataProcess)\n//   }, [])\n//   const classes = useStyles()\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue)\n//   }\n//   return (\n//     <div className={classes.root}>\n//       <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" centered>\n//         <Tab label=\"Adoption\" />\n//         <Tab label=\"Processes\" />\n//         <Tab label=\"Result\" />\n//       </Tabs>\n\n//       <TabPanel value={value} index={0}>\n//         <Chart />\n//       </TabPanel>\n//       <TabPanel value={value} index={1}>\n//         <ClientOffboarding />\n//       </TabPanel>\n//       <TabPanel value={value} index={2}>\n//         <AutomationRealTimeChart />\n//       </TabPanel>\n\n//     </div>\n//   )\n// }\n\n// export default Dashboard;"]},"metadata":{},"sourceType":"module"}