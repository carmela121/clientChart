{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientAdoption/ClientDataChart.jsx\";\nimport React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClientDataChart = props => {\n  const [Xlabel, setXLabel] = React.useState('Number of BRs');\n\n  const getData = () => {\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel(\"Number of BRs\");\n      const {\n        onboardedBRs,\n        offboardedBRs\n      } = props.data;\n      const dataStructure = {\n        \"Onboarded BRs\": onboardedBRs,\n        \"Offboarded BRs\": offboardedBRs\n      };\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\"\n        }]\n      };\n      return chartDataConfig;\n    }\n\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Client Files\");\n      const {\n        onboardedFiles,\n        offboardedFiles\n      } = props.data;\n      const dataStructure = {\n        \"Dormant Clients\": onboardedFiles,\n        \"Active Clients\": offboardedFiles\n      };\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\"\n        }]\n      };\n      return chartDataConfig;\n    }\n\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel(\"Number of BRs\");\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[0].year, props.dataComparison[1].year],\n        datasets: [{\n          label: \"Onboarded BRs\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n          data: [props.dataComparison[2].onboardedBRs, props.dataComparison[3].onboardedBRs]\n        }, {\n          label: \"Offboarded BRs\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n          data: [props.dataComparison[2].offboardedBRs, props.dataComparison[3].offboardedBRs]\n        }]\n      };\n      return chartDataConfigComparison;\n    }\n\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Client Files\");\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[0].year, props.dataComparison[1].year],\n        datasets: [{\n          label: \"Dormant Clients\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n          data: [props.dataComparison[0].onboardedFiles, props.dataComparison[1].onboardedFiles]\n        }, {\n          label: \"Active Clients\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n          data: [props.dataComparison[0].offboardedFiles, props.dataComparison[1].offboardedFiles]\n        }]\n      };\n      return chartDataConfigComparison;\n    }\n  };\n\n  const handleChange = e => {\n    props.setQuery(e.target.value);\n  };\n\n  const handleTypeChange = e => {\n    props.setTypeQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Identifying Active vs Dormant Clients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Year \"), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100px\",\n      textAlign: \"center\",\n      marginBottom: \"40px\"\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.activeQuery,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, props.dataComparison.map(({\n    year\n  }) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: year,\n    value: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, year)), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2018/2019\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"2018/2019\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"60%\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HorizontalBar, {\n    options: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            beginAtZero: true\n          },\n          scaleLabel: {\n            display: true,\n            fontSize: 14,\n            labelString: Xlabel\n          }\n        }]\n      }\n    },\n    data: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ClientDataChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientAdoption/ClientDataChart.jsx"],"names":["React","HorizontalBar","Select","MenuItem","ClientDataChart","props","Xlabel","setXLabel","useState","getData","activeQuery","typeQuery","onboardedBRs","offboardedBRs","data","dataStructure","chartDataConfig","labels","Object","keys","datasets","values","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","onboardedFiles","offboardedFiles","chartDataConfigComparison","dataComparison","year","handleChange","e","setQuery","target","value","handleTypeChange","setTypeQuery","textAlign","marginRight","width","marginBottom","map","margin","scales","xAxes","ticks","beginAtZero","scaleLabel","display","fontSize","labelString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClientDataChart = (props) => {\n  const [Xlabel, setXLabel] = React.useState('Number of BRs')\n  const getData = () => {\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel(\"Number of BRs\")\n      const { onboardedBRs, offboardedBRs } = props.data;\n\n      const dataStructure = {\n        \"Onboarded BRs\": onboardedBRs,\n        \"Offboarded BRs\": offboardedBRs,\n\n      };\n\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n          borderColor: \"rgba(120, 139, 191,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n          hoverBorderColor: \"rgba(120, 139, 191,1)\",\n        }]\n      };\n      return chartDataConfig\n    }\n    if (props.activeQuery !== \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Client Files\")\n\n      const { onboardedFiles, offboardedFiles } = props.data;\n\n      const dataStructure = {\n\n        \"Dormant Clients\": onboardedFiles,\n        \"Active Clients\": offboardedFiles,\n      };\n\n      const chartDataConfig = {\n        labels: Object.keys(dataStructure),\n        datasets: [{\n          data: Object.values(dataStructure),\n          label: \"Total\",\n          backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n          borderColor: \"rgba(255, 204, 255,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n          hoverBorderColor: \"rgba(255, 204, 255,1)\",\n        }]\n\n      };\n      return chartDataConfig\n    }\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"BRData\") {\n      setXLabel(\"Number of BRs\")\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[0].year, props.dataComparison[1].year],\n        datasets: [\n          {\n            label: \"Onboarded BRs\",\n            backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n            borderColor: \"rgba(120, 139, 191,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n            hoverBorderColor: \"rgba(120, 139, 191,1)\",\n            data: [props.dataComparison[2].onboardedBRs, props.dataComparison[3].onboardedBRs]\n          },\n          {\n            label: \"Offboarded BRs\",\n            backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n            borderColor: \"rgba(255, 204, 255,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n            hoverBorderColor: \"rgba(255, 204, 255,1)\",\n            data: [props.dataComparison[2].offboardedBRs, props.dataComparison[3].offboardedBRs]\n          },\n\n        ],\n\n      };\n      return chartDataConfigComparison\n    }\n    if (props.activeQuery === \"2018/2019\" && props.typeQuery === \"FileData\") {\n      setXLabel(\"Number of Client Files\")\n      const chartDataConfigComparison = {\n        labels: [props.dataComparison[0].year, props.dataComparison[1].year],\n        datasets: [\n          {\n            label: \"Dormant Clients\",\n            backgroundColor: \"rgba(120, 139, 191, 0.3)\",\n            borderColor: \"rgba(120, 139, 191,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(120, 139, 191,1)\",\n            hoverBorderColor: \"rgba(120, 139, 191,1)\",\n            data: [props.dataComparison[0].onboardedFiles, props.dataComparison[1].onboardedFiles]\n          },\n          {\n            label: \"Active Clients\",\n            backgroundColor: \"rgba(255, 204, 255, 0.3)\",\n            borderColor: \"rgba(255, 204, 255,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255, 204, 255,1)\",\n            hoverBorderColor: \"rgba(255, 204, 255,1)\",\n            data: [props.dataComparison[0].offboardedFiles, props.dataComparison[1].offboardedFiles]\n          },\n\n        ],\n\n      };\n      return chartDataConfigComparison\n    }\n\n  }\n  const handleChange = (e) => {\n    props.setQuery(e.target.value)\n  }\n  const handleTypeChange = (e) => {\n    props.setTypeQuery(e.target.value)\n  }\n\n  return (\n\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Identifying Active vs Dormant Clients</h1>\n      <div>\n        {/* <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\", marginRight: \"20px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.typeQuery}\n          onChange={handleTypeChange}\n\n        >\n          <MenuItem value={\"BRData\"}>BR Data</MenuItem>\n          <MenuItem value={\"FileData\"}>File Data</MenuItem>\n\n        </Select> */}\n        <label style={{ marginRight: \"20px\" }}>Year </label>\n        <Select\n          style={{ width: \"100px\", textAlign: \"center\", marginBottom: \"40px\" }}\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.activeQuery}\n          onChange={handleChange}\n\n        >\n          {props.dataComparison.map(({ year }) => (\n            <MenuItem key={year} value={year}>{year}</MenuItem>\n          ))}\n          <MenuItem value={\"2018/2019\"}>2018/2019</MenuItem>\n        </Select>\n\n      </div>\n      <div style={{ width: \"60%\", margin: \"auto\" }}>\n        <HorizontalBar\n\n          options={{\n            scales: {\n              xAxes: [{\n                ticks: {\n                  beginAtZero: true\n                },\n                scaleLabel: {\n                  display: true,\n                  fontSize: 14,\n                  labelString: Xlabel,\n                }\n              }]\n            }\n          }}\n          data={getData} />\n      </div>\n\n\n    </div>\n  );\n\n};\n\nexport default ClientDataChart;\n"]},"metadata":{},"sourceType":"module"}