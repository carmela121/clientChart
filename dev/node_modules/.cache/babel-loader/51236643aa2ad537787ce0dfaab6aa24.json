{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/CountryChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Select } from '@material-ui/core';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst CountryChart = props => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/clients').then(res => res.json()).then(data => {\n      let chartData = {\n        labels: data.map(({\n          year\n        }) => year),\n        datasets: [{\n          label: 'Total population',\n          data: data.map(({\n            value\n          }) => value),\n          backgroundColor: ['rgb(50, 168, 82)', 'rgb(168, 50, 50)', 'rgb(50, 144, 168)', 'rgb(142, 50, 168)', 'rgb(193, 201, 34)', 'rgb(64, 237, 231)', 'rgb(237, 64, 64)', 'rgb(32, 103, 135)']\n        }, {\n          label: 'country',\n          data: data.map(({\n            country\n          }) => country),\n          backgroundColor: ['rgb(65, 204, 103)', 'rgb(222, 73, 73)', 'rgb(78, 193, 222)', 'rgb(190, 70, 224)', 'rgb(219, 227, 68)', 'rgb(111, 227, 223)', 'rgb(237, 114, 114)', 'rgb(60, 158, 201)']\n        }]\n      };\n      setData(chartData);\n      setLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const handleChange = event => {\n    setYear(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Chart loading...\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"checkedA\",\n    onClick: props.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: ['2015', '2016'],\n    onChange: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: data,\n    options: {\n      title: {\n        display: true,\n        text: \"World population by year\",\n        fontSize: 25\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountryChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/CountryChart.js"],"names":["React","useState","useEffect","Switch","Select","HorizontalBar","CountryChart","props","loading","setLoading","data","setData","year","setYear","fetch","then","res","json","chartData","labels","map","datasets","label","value","backgroundColor","country","catch","error","console","log","handleChange","event","target","handleClick","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Switch, Select } from '@material-ui/core';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst CountryChart = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      'http://localhost:5000/clients')\n      .then(res => res.json())\n      .then(data => {\n\n        let chartData = {\n          labels: data.map(({ year }) => year),\n          datasets: [{\n            label: 'Total population',\n            data: data.map(({ value }) => value),\n            backgroundColor: [\n              'rgb(50, 168, 82)',\n              'rgb(168, 50, 50)',\n              'rgb(50, 144, 168)',\n              'rgb(142, 50, 168)',\n              'rgb(193, 201, 34)',\n              'rgb(64, 237, 231)',\n              'rgb(237, 64, 64)',\n              'rgb(32, 103, 135)']\n          },\n          {\n            label: 'country',\n            data: data.map(({ country }) => country),\n            backgroundColor: [\n              'rgb(65, 204, 103)',\n              'rgb(222, 73, 73)',\n              'rgb(78, 193, 222)',\n              'rgb(190, 70, 224)',\n              'rgb(219, 227, 68)',\n              'rgb(111, 227, 223)',\n              'rgb(237, 114, 114)',\n              'rgb(60, 158, 201)']\n          }\n\n          ]\n        }\n        setData(chartData);\n        setLoading(false)\n      })\n      .catch(error => console.log(error));\n  }, []);\n  const handleChange = (event) => {\n    setYear(event.target.value);\n  };\n  return (\n\n    <div className=\"chart\">\n      {loading && <p>Chart loading...</p>}\n      <Switch name=\"checkedA\" onClick={props.handleClick} />\n      <Select labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={['2015', '2016']}\n        onChange={''}></Select>\n      <HorizontalBar\n        data={data}\n        options={{\n          title: {\n            display: true,\n            text: \"World population by year\",\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default CountryChart;"]},"metadata":{},"sourceType":"module"}