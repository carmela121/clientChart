{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/CountryChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Select } from '@material-ui/core';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst CountryChart = props => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/clients').then(res => res.json()).then(data => {\n      let chartData = {\n        labels: data.map(({\n          year\n        }) => year),\n        datasets: [{\n          label: 'Onboarded BRs',\n          data: data.map(({\n            onboardedBRs\n          }) => onboardedBRs),\n          backgroundColor: ['rgb(50, 168, 82)', 'rgb(168, 50, 50)', 'rgb(50, 144, 168)', 'rgb(142, 50, 168)', 'rgb(193, 201, 34)']\n        }, {\n          label: 'Offboarded BRS',\n          data: data.map(({\n            offboardedBRS\n          }) => offboardedBRS),\n          backgroundColor: ['rgb(65, 204, 103)', 'rgb(222, 73, 73)', 'rgb(78, 193, 222)', 'rgb(190, 70, 224)', 'rgb(219, 227, 68)']\n        }, {\n          label: 'Onboarded Files',\n          data: data.map(({\n            onboardedFiles\n          }) => onboardedFiles),\n          backgroundColor: ['rgba(111, 227, 143)', 'rgba(240, 115, 115)', 'rgba(140, 218, 237)', 'rgba(211, 127, 235)', 'rgba(234, 240, 120)']\n        }, {\n          label: 'Offboarded Files',\n          data: data.map(({\n            offboardedFiles\n          }) => offboardedFiles),\n          backgroundColor: ['rgb(65, 204, 150)', 'rgb(222, 73, 73)', 'rgb(78, 193, 222)', 'rgb(190, 70, 224)', 'rgb(219, 227, 68)']\n        }]\n      };\n      setData(chartData);\n      setLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Chart loading...\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"checkedA\",\n    onClick: props.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: data,\n    options: {\n      title: {\n        display: true,\n        text: \"Client Information\",\n        fontSize: 25\n      },\n      legend: {\n        display: false,\n        position: 'right'\n      },\n      animation: {\n        duration: 2000,\n        onComplete: function () {\n          console.log(data.datasets);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountryChart;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/charts/CountryChart.js"],"names":["React","useState","useEffect","Switch","Select","HorizontalBar","CountryChart","props","loading","setLoading","data","setData","year","setYear","fetch","then","res","json","chartData","labels","map","datasets","label","onboardedBRs","backgroundColor","offboardedBRS","onboardedFiles","offboardedFiles","catch","error","console","log","handleClick","title","display","text","fontSize","legend","position","animation","duration","onComplete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Switch, Select } from '@material-ui/core';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst CountryChart = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      'http://localhost:5000/clients')\n      .then(res => res.json())\n      .then(data => {\n\n        let chartData = {\n          labels: data.map(({ year }) => year),\n          datasets: [{\n            label: 'Onboarded BRs',\n            data: data.map(({ onboardedBRs }) => onboardedBRs),\n            backgroundColor: [\n              'rgb(50, 168, 82)',\n              'rgb(168, 50, 50)',\n              'rgb(50, 144, 168)',\n              'rgb(142, 50, 168)',\n              'rgb(193, 201, 34)'\n            ]\n          },\n          {\n            label: 'Offboarded BRS',\n            data: data.map(({ offboardedBRS }) => offboardedBRS),\n            backgroundColor: [\n              'rgb(65, 204, 103)',\n              'rgb(222, 73, 73)',\n              'rgb(78, 193, 222)',\n              'rgb(190, 70, 224)',\n              'rgb(219, 227, 68)'\n            ]\n          },\n          {\n            label: 'Onboarded Files',\n            data: data.map(({ onboardedFiles }) => onboardedFiles),\n            backgroundColor: [\n              'rgba(111, 227, 143)',\n              'rgba(240, 115, 115)',\n              'rgba(140, 218, 237)',\n              'rgba(211, 127, 235)',\n              'rgba(234, 240, 120)'\n            ]\n          },\n          {\n            label: 'Offboarded Files',\n            data: data.map(({ offboardedFiles }) => offboardedFiles),\n            backgroundColor: [\n              'rgb(65, 204, 150)',\n              'rgb(222, 73, 73)',\n              'rgb(78, 193, 222)',\n              'rgb(190, 70, 224)',\n              'rgb(219, 227, 68)'\n            ]\n          }\n\n\n          ]\n        }\n        setData(chartData);\n        setLoading(false)\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n\n    <div className=\"chart\">\n      {loading && <p>Chart loading...</p>}\n      <Switch name=\"checkedA\" onClick={props.handleClick} />\n      <Select labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"></Select>\n      <HorizontalBar\n        data={data}\n        options={{\n          title: {\n            display: true,\n            text: \"Client Information\",\n            fontSize: 25\n          },\n          legend: {\n            display: false,\n            position: 'right'\n          },\n\n          animation: {\n            duration: 2000,\n            onComplete: function () {\n              console.log(data.datasets)\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default CountryChart;"]},"metadata":{},"sourceType":"module"}