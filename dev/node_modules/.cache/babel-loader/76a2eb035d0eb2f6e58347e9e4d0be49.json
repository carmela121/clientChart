{"ast":null,"code":"var _jsxFileName = \"/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx\";\nimport React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport dataProcess from './data';\n\nconst HeatMap = props => {\n  const [chartOptions, setOptions] = React.useState({});\n  const [chartSeries, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [customerData, setCustomerData] = React.useState([]);\n  const {\n    ['First Name']: firstName\n  } = dataProcess;\n  const dataOptions = {\n    chart: {\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 2000,\n            color: \"#4bb0ff\",\n            name: \"0 - 2000\"\n          }, {\n            from: 2001,\n            to: 4000,\n            color: \"#0063b0\",\n            name: \"2001 - 4000\"\n          }, {\n            from: 4001,\n            to: 6000,\n            color: \"#003863\",\n            name: \"4001 - 6000\"\n          }]\n        }\n      }\n    },\n    xaxis: {\n      categories: dataProcess.map(item => item[\"Location code\"])\n    },\n    dataLabels: {\n      enabled: true // style: {\n      //   colors: [\"#787878\"],\n      //   fontWeight: \"lighter\"\n      // },\n\n    },\n    title: {\n      text: 'Method',\n      margin: 10,\n      offsetX: 40,\n      offsetY: 10,\n      floating: true,\n      style: {\n        fontSize: '16px'\n      }\n    },\n    colors: [\"#008FFB\"]\n  };\n  const dataSeries = [{\n    name: \"Manual Closures\",\n    data: dataProcess.map(item => item[\"Manual Closures\"])\n  }, {\n    name: \"RPA Closures\",\n    data: dataProcess.map(item => item[\"RPA Closures\"])\n  }, {\n    name: \"Closures with script available\",\n    data: dataProcess.map(item => item[\"Closures with script available\"])\n  }];\n  React.useEffect(() => {\n    setOptions(dataOptions);\n    getSeries(dataSeries);\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"Chart loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Client Processes\"), /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: chartOptions,\n    series: chartSeries,\n    type: \"heatmap\",\n    height: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Country Code\")));\n};\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/ccrm/Desktop/projects/chartjs/dev/src/components/clientProcesses/HeatMap.jsx"],"names":["React","ReactApexChart","dataProcess","HeatMap","props","chartOptions","setOptions","useState","chartSeries","getSeries","loading","setLoading","customerData","setCustomerData","firstName","dataOptions","chart","toolbar","show","plotOptions","heatmap","radius","colorScale","ranges","from","to","color","name","xaxis","categories","map","item","dataLabels","enabled","title","text","margin","offsetX","offsetY","floating","style","fontSize","colors","dataSeries","data","useEffect","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport dataProcess from './data';\nconst HeatMap = (props) => {\n\n  const [chartOptions, setOptions] = React.useState({});\n  const [chartSeries, getSeries] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [customerData, setCustomerData] = React.useState([])\n  const { ['First Name']: firstName } = dataProcess\n  const dataOptions = {\n    chart: {\n      toolbar: {\n        show: false,\n      }\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 4,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 2000,\n            color: \"#4bb0ff\",\n            name: \"0 - 2000\"\n          },\n          {\n            from: 2001,\n            to: 4000,\n            color: \"#0063b0\",\n            name: \"2001 - 4000\"\n          },\n          {\n            from: 4001,\n            to: 6000,\n            color: \"#003863\",\n            name: \"4001 - 6000\"\n          }\n          ]\n        }\n\n      }\n    },\n    xaxis: {\n      categories: dataProcess.map((item) => item[\"Location code\"])\n    },\n    dataLabels: {\n      enabled: true,\n      // style: {\n      //   colors: [\"#787878\"],\n      //   fontWeight: \"lighter\"\n      // },\n    },\n    title: {\n      text: 'Method',\n      margin: 10,\n      offsetX: 40,\n      offsetY: 10,\n      floating: true,\n      style: {\n        fontSize: '16px',\n\n      },\n\n    },\n\n    colors: [\"#008FFB\"],\n  };\n  const dataSeries = [{\n    name: \"Manual Closures\",\n    data: dataProcess.map((item) => item[\"Manual Closures\"])\n  },\n  {\n    name: \"RPA Closures\",\n    data: dataProcess.map((item) => item[\"RPA Closures\"])\n  },\n  {\n    name: \"Closures with script available\",\n    data: dataProcess.map((item) => item[\"Closures with script available\"])\n  }]\n  React.useEffect(() => {\n\n    setOptions(dataOptions);\n    getSeries(dataSeries)\n    setLoading(false);\n\n  }, []);\n\n\n\n  return (\n\n    <div style={{ padding: \"40px\" }} >\n      {loading && <p>Chart loading...</p>}\n      <div className=\"mixed-chart\" style={{ margin: \"auto\" }}>\n        <h1>Client Processes</h1>\n        <ReactApexChart\n          options={chartOptions}\n          series={chartSeries}\n          type=\"heatmap\"\n          height=\"300px\"\n\n        />\n        <p>Country Code</p>\n      </div>\n    </div >\n\n  );\n}\n\n\nexport default HeatMap;"]},"metadata":{},"sourceType":"module"}